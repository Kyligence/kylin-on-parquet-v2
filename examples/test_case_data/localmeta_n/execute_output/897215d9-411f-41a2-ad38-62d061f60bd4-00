{
  "uuid" : "897215d9-411f-41a2-ad38-62d061f60bd4-00",
  "last_modified" : 1576666953785,
  "version" : "3.0.0.20500",
  "content" : "java.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat io.kyligence.kap.engine.spark.job.NSparkExecutable.runLocalMode(NSparkExecutable.java:359)\n\tat io.kyligence.kap.engine.spark.job.NSparkExecutable.doWork(NSparkExecutable.java:153)\n\tat org.apache.kylin.job.execution.AbstractExecutable.execute(AbstractExecutable.java:190)\n\tat org.apache.kylin.job.execution.DefaultChainedExecutable.doWork(DefaultChainedExecutable.java:76)\n\tat org.apache.kylin.job.execution.AbstractExecutable.execute(AbstractExecutable.java:190)\n\tat org.apache.kylin.job.impl.threadpool.DefaultScheduler$JobRunner.run(DefaultScheduler.java:114)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.RuntimeException: Error execute io.kyligence.kap.engine.spark.job.ResourceDetectBeforeCubingJob\n\tat io.kyligence.kap.engine.spark.application.SparkApplication.execute(SparkApplication.java:89)\n\tat io.kyligence.kap.engine.spark.job.ResourceDetectBeforeCubingJob.main(ResourceDetectBeforeCubingJob.java:99)\n\t... 13 more\nCaused by: org.apache.spark.sql.AnalysisException: cannot resolve '`SELLER_ACCOUNT_0_DOT_0_ACCOUNT_COUNTRY`' given input columns: [TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL4_NAME, TEST_KYLIN_FACT_0_DOT_0_SELLER_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_MOVE_TO, TEST_KYLIN_FACT_0_DOT_0_ORDER_ID, TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_DISTINCT_BITMAP, TEST_KYLIN_FACT_0_DOT_0_LSTG_SITE_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_UPD_DATE, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_BUSN_UNIT, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL2_NAME, TEST_CATEGORY_GROUPINGS_0_DOT_0_SRC_ID, TEST_KYLIN_FACT_0_DOT_0_LEAF_CATEG_ID, TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_COLUMN, TEST_CATEGORY_GROUPINGS_0_DOT_0_SITE_ID, TEST_KYLIN_FACT_0_DOT_0_SLR_SEGMENT_CD, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL4_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_LEAF_CATEG_ID, TEST_KYLIN_FACT_0_DOT_0_PRICE, TEST_CATEGORY_GROUPINGS_0_DOT_0_META_CATEG_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_USER_DEFINED_FIELD1, TEST_KYLIN_FACT_0_DOT_0_CAL_DT, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_BUSN_MGR, TEST_CATEGORY_GROUPINGS_0_DOT_0_GROUPINGS_CRE_DATE, TEST_CATEGORY_GROUPINGS_0_DOT_0_META_CATEG_NAME, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL6_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_VCS_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_DOMAIN_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL2_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL5_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_SAP_CATEGORY_ID, SELLER_COUNTRY_0_DOT_0_LONGITUDE, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL3_NAME, TEST_KYLIN_FACT_0_DOT_0_LSTG_FORMAT_NAME, SELLER_COUNTRY_0_DOT_0_NAME, TEST_CATEGORY_GROUPINGS_0_DOT_0_USER_DEFINED_FIELD5, TEST_CATEGORY_GROUPINGS_0_DOT_0_GCS_ID, TEST_KYLIN_FACT_0_DOT_0_ITEM_COUNT, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL7_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_ADULT_CATEG_YN, TEST_CATEGORY_GROUPINGS_0_DOT_0_BSNS_VRTCL_NAME, SELLER_COUNTRY_0_DOT_0_LATITUDE, TEST_CATEGORY_GROUPINGS_0_DOT_0_REGN_CATEG, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL7_NAME, TEST_CATEGORY_GROUPINGS_0_DOT_0_USER_DEFINED_FIELD3, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL3_ID, SELLER_COUNTRY_0_DOT_0_COUNTRY, TEST_KYLIN_FACT_0_DOT_0_TRANS_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL5_NAME, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_FLAGS, TEST_CATEGORY_GROUPINGS_0_DOT_0_LEAF_CATEG_NAME, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL6_NAME, TEST_CATEGORY_GROUPINGS_0_DOT_0_UPD_USER, TEST_CATEGORY_GROUPINGS_0_DOT_0_GROUPINGS_CRE_USER];;\n'Join Inner, ('SELLER_ACCOUNT_0_DOT_0_ACCOUNT_COUNTRY = SELLER_COUNTRY_0_DOT_0_COUNTRY#843)\n:- Join Inner, ((TEST_KYLIN_FACT_0_DOT_0_LEAF_CATEG_ID#28L = TEST_CATEGORY_GROUPINGS_0_DOT_0_LEAF_CATEG_ID#632L) && (TEST_KYLIN_FACT_0_DOT_0_LSTG_SITE_ID#29 = TEST_CATEGORY_GROUPINGS_0_DOT_0_SITE_ID#634))\n:  :- Project [TEST_KYLIN_FACT_0_DOT_0_TRANS_ID#24L, TEST_KYLIN_FACT_0_DOT_0_ORDER_ID#25L, TEST_KYLIN_FACT_0_DOT_0_CAL_DT#26, TEST_KYLIN_FACT_0_DOT_0_LSTG_FORMAT_NAME#27, TEST_KYLIN_FACT_0_DOT_0_LEAF_CATEG_ID#28L, TEST_KYLIN_FACT_0_DOT_0_LSTG_SITE_ID#29, TEST_KYLIN_FACT_0_DOT_0_SLR_SEGMENT_CD#30, TEST_KYLIN_FACT_0_DOT_0_SELLER_ID#31, TEST_KYLIN_FACT_0_DOT_0_PRICE#32, TEST_KYLIN_FACT_0_DOT_0_ITEM_COUNT#33, TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_DISTINCT_BITMAP#34, TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_COLUMN#35]\n:  :  +- Project [TRANS_ID#0L AS TEST_KYLIN_FACT_0_DOT_0_TRANS_ID#24L, ORDER_ID#1L AS TEST_KYLIN_FACT_0_DOT_0_ORDER_ID#25L, CAL_DT#2 AS TEST_KYLIN_FACT_0_DOT_0_CAL_DT#26, LSTG_FORMAT_NAME#3 AS TEST_KYLIN_FACT_0_DOT_0_LSTG_FORMAT_NAME#27, LEAF_CATEG_ID#4L AS TEST_KYLIN_FACT_0_DOT_0_LEAF_CATEG_ID#28L, LSTG_SITE_ID#5 AS TEST_KYLIN_FACT_0_DOT_0_LSTG_SITE_ID#29, SLR_SEGMENT_CD#6 AS TEST_KYLIN_FACT_0_DOT_0_SLR_SEGMENT_CD#30, SELLER_ID#7 AS TEST_KYLIN_FACT_0_DOT_0_SELLER_ID#31, PRICE#8 AS TEST_KYLIN_FACT_0_DOT_0_PRICE#32, ITEM_COUNT#9 AS TEST_KYLIN_FACT_0_DOT_0_ITEM_COUNT#33, TEST_COUNT_DISTINCT_BITMAP#10 AS TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_DISTINCT_BITMAP#34, TEST_COUNT_COLUMN#11 AS TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_COLUMN#35]\n:  :     +- SubqueryAlias `TEST_KYLIN_FACT`\n:  :        +- Relation[TRANS_ID#0L,ORDER_ID#1L,CAL_DT#2,LSTG_FORMAT_NAME#3,LEAF_CATEG_ID#4L,LSTG_SITE_ID#5,SLR_SEGMENT_CD#6,SELLER_ID#7,PRICE#8,ITEM_COUNT#9,TEST_COUNT_DISTINCT_BITMAP#10,TEST_COUNT_COLUMN#11] csv\n:  +- Project [TEST_CATEGORY_GROUPINGS_0_DOT_0_LEAF_CATEG_ID#632L, TEST_CATEGORY_GROUPINGS_0_DOT_0_LEAF_CATEG_NAME#633, TEST_CATEGORY_GROUPINGS_0_DOT_0_SITE_ID#634, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_BUSN_MGR#635, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_BUSN_UNIT#636, TEST_CATEGORY_GROUPINGS_0_DOT_0_REGN_CATEG#637, TEST_CATEGORY_GROUPINGS_0_DOT_0_USER_DEFINED_FIELD1#638, TEST_CATEGORY_GROUPINGS_0_DOT_0_USER_DEFINED_FIELD3#639, TEST_CATEGORY_GROUPINGS_0_DOT_0_GROUPINGS_CRE_DATE#640, TEST_CATEGORY_GROUPINGS_0_DOT_0_UPD_DATE#641, TEST_CATEGORY_GROUPINGS_0_DOT_0_GROUPINGS_CRE_USER#642, TEST_CATEGORY_GROUPINGS_0_DOT_0_UPD_USER#643, TEST_CATEGORY_GROUPINGS_0_DOT_0_META_CATEG_ID#644, TEST_CATEGORY_GROUPINGS_0_DOT_0_META_CATEG_NAME#645, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL2_ID#646, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL3_ID#647, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL4_ID#648, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL5_ID#649, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL6_ID#650, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL7_ID#651, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL2_NAME#652, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL3_NAME#653, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL4_NAME#654, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL5_NAME#655, ... 12 more fields]\n:     +- Project [LEAF_CATEG_ID#560L AS TEST_CATEGORY_GROUPINGS_0_DOT_0_LEAF_CATEG_ID#632L, LEAF_CATEG_NAME#561 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_LEAF_CATEG_NAME#633, SITE_ID#562 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_SITE_ID#634, CATEG_BUSN_MGR#563 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_BUSN_MGR#635, CATEG_BUSN_UNIT#564 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_BUSN_UNIT#636, REGN_CATEG#565 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_REGN_CATEG#637, USER_DEFINED_FIELD1#566 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_USER_DEFINED_FIELD1#638, USER_DEFINED_FIELD3#567 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_USER_DEFINED_FIELD3#639, GROUPINGS_CRE_DATE#568 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_GROUPINGS_CRE_DATE#640, UPD_DATE#569 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_UPD_DATE#641, GROUPINGS_CRE_USER#570 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_GROUPINGS_CRE_USER#642, UPD_USER#571 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_UPD_USER#643, META_CATEG_ID#572 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_META_CATEG_ID#644, META_CATEG_NAME#573 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_META_CATEG_NAME#645, CATEG_LVL2_ID#574 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL2_ID#646, CATEG_LVL3_ID#575 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL3_ID#647, CATEG_LVL4_ID#576 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL4_ID#648, CATEG_LVL5_ID#577 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL5_ID#649, CATEG_LVL6_ID#578 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL6_ID#650, CATEG_LVL7_ID#579 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL7_ID#651, CATEG_LVL2_NAME#580 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL2_NAME#652, CATEG_LVL3_NAME#581 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL3_NAME#653, CATEG_LVL4_NAME#582 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL4_NAME#654, CATEG_LVL5_NAME#583 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL5_NAME#655, ... 12 more fields]\n:        +- SubqueryAlias `TEST_CATEGORY_GROUPINGS`\n:           +- Relation[LEAF_CATEG_ID#560L,LEAF_CATEG_NAME#561,SITE_ID#562,CATEG_BUSN_MGR#563,CATEG_BUSN_UNIT#564,REGN_CATEG#565,USER_DEFINED_FIELD1#566,USER_DEFINED_FIELD3#567,GROUPINGS_CRE_DATE#568,UPD_DATE#569,GROUPINGS_CRE_USER#570,UPD_USER#571,META_CATEG_ID#572,META_CATEG_NAME#573,CATEG_LVL2_ID#574,CATEG_LVL3_ID#575,CATEG_LVL4_ID#576,CATEG_LVL5_ID#577,CATEG_LVL6_ID#578,CATEG_LVL7_ID#579,CATEG_LVL2_NAME#580,CATEG_LVL3_NAME#581,CATEG_LVL4_NAME#582,CATEG_LVL5_NAME#583,... 12 more fields] csv\n+- Project [SELLER_COUNTRY_0_DOT_0_COUNTRY#843, SELLER_COUNTRY_0_DOT_0_LATITUDE#844, SELLER_COUNTRY_0_DOT_0_LONGITUDE#845, SELLER_COUNTRY_0_DOT_0_NAME#846]\n   +- Project [COUNTRY#835 AS SELLER_COUNTRY_0_DOT_0_COUNTRY#843, LATITUDE#836 AS SELLER_COUNTRY_0_DOT_0_LATITUDE#844, LONGITUDE#837 AS SELLER_COUNTRY_0_DOT_0_LONGITUDE#845, NAME#838 AS SELLER_COUNTRY_0_DOT_0_NAME#846]\n      +- SubqueryAlias `SELLER_COUNTRY`\n         +- Relation[COUNTRY#835,LATITUDE#836,LONGITUDE#837,NAME#838] csv\n\n\tat org.apache.spark.sql.catalyst.analysis.package$AnalysisErrorAt.failAnalysis(package.scala:42)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$3.applyOrElse(CheckAnalysis.scala:110)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$3.applyOrElse(CheckAnalysis.scala:107)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:278)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:278)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:70)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:277)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:275)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:275)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:326)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren(TreeNode.scala:324)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:275)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:93)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:93)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$1.apply(QueryPlan.scala:105)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$1.apply(QueryPlan.scala:105)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:70)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpression$1(QueryPlan.scala:104)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:116)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:117)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$2.apply(QueryPlan.scala:126)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions(QueryPlan.scala:126)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp(QueryPlan.scala:93)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:107)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:85)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp(TreeNode.scala:127)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$class.checkAnalysis(CheckAnalysis.scala:85)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer.checkAnalysis(Analyzer.scala:95)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$executeAndCheck$1.apply(Analyzer.scala:108)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$executeAndCheck$1.apply(Analyzer.scala:105)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.markInAnalyzer(AnalysisHelper.scala:201)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer.executeAndCheck(Analyzer.scala:105)\n\tat org.apache.spark.sql.execution.QueryExecution.analyzed$lzycompute(QueryExecution.scala:57)\n\tat org.apache.spark.sql.execution.QueryExecution.analyzed(QueryExecution.scala:55)\n\tat org.apache.spark.sql.execution.QueryExecution.assertAnalyzed(QueryExecution.scala:47)\n\tat org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:78)\n\tat org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$withPlan(Dataset.scala:3410)\n\tat org.apache.spark.sql.Dataset.join(Dataset.scala:995)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable$.joinTableDataset(CreateFlatTable.scala:191)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable$$anonfun$joinFactTableWithLookupTables$1.apply(CreateFlatTable.scala:165)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable$$anonfun$joinFactTableWithLookupTables$1.apply(CreateFlatTable.scala:164)\n\tat scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157)\n\tat scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157)\n\tat scala.collection.immutable.HashMap$HashMap1.foreach(HashMap.scala:221)\n\tat scala.collection.immutable.HashMap$HashTrieMap.foreach(HashMap.scala:428)\n\tat scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157)\n\tat scala.collection.AbstractTraversable.foldLeft(Traversable.scala:104)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable$.joinFactTableWithLookupTables(CreateFlatTable.scala:163)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable.generateDataset(CreateFlatTable.scala:68)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser.getFlatTable(ParentSourceChooser.scala:163)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser.io$kyligence$kap$engine$spark$job$ParentSourceChooser$$decideFlatTableSource(ParentSourceChooser.scala:73)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser$$anonfun$decideSources$1.apply(ParentSourceChooser.scala:59)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser$$anonfun$decideSources$1.apply(ParentSourceChooser.scala:54)\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:893)\n\tat scala.collection.AbstractIterator.foreach(Iterator.scala:1336)\n\tat scala.collection.IterableLike$class.foreach(IterableLike.scala:72)\n\tat scala.collection.AbstractIterable.foreach(Iterable.scala:54)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser.decideSources(ParentSourceChooser.scala:54)\n\tat io.kyligence.kap.engine.spark.job.ResourceDetectBeforeCubingJob.doExecute(ResourceDetectBeforeCubingJob.java:60)\n\tat io.kyligence.kap.engine.spark.application.SparkApplication.execute(SparkApplication.java:266)\n\tat io.kyligence.kap.engine.spark.application.SparkApplication.execute(SparkApplication.java:86)\n\t... 14 more\n",
  "status" : "ERROR",
  "info" : {
    "startTime" : "1576666943360",
    "endTime" : "1576666953778"
  }
}