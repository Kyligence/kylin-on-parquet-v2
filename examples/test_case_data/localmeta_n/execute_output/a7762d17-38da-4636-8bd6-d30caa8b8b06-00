{
  "uuid" : "a7762d17-38da-4636-8bd6-d30caa8b8b06-00",
  "last_modified" : 1576664966315,
  "version" : "3.0.0.20500",
  "content" : "java.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat io.kyligence.kap.engine.spark.job.NSparkExecutable.runLocalMode(NSparkExecutable.java:359)\n\tat io.kyligence.kap.engine.spark.job.NSparkExecutable.doWork(NSparkExecutable.java:153)\n\tat org.apache.kylin.job.execution.AbstractExecutable.execute(AbstractExecutable.java:190)\n\tat org.apache.kylin.job.execution.DefaultChainedExecutable.doWork(DefaultChainedExecutable.java:76)\n\tat org.apache.kylin.job.execution.AbstractExecutable.execute(AbstractExecutable.java:190)\n\tat org.apache.kylin.job.impl.threadpool.DefaultScheduler$JobRunner.run(DefaultScheduler.java:114)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.RuntimeException: Error execute io.kyligence.kap.engine.spark.job.ResourceDetectBeforeCubingJob\n\tat io.kyligence.kap.engine.spark.application.SparkApplication.execute(SparkApplication.java:89)\n\tat io.kyligence.kap.engine.spark.job.ResourceDetectBeforeCubingJob.main(ResourceDetectBeforeCubingJob.java:99)\n\t... 13 more\nCaused by: org.apache.spark.sql.AnalysisException: cannot resolve '`SELLER_ACCOUNT_0_DOT_0_ACCOUNT_COUNTRY`' given input columns: [TEST_KYLIN_FACT_0_DOT_0_ITEM_COUNT, SELLER_COUNTRY_0_DOT_0_NAME, SELLER_COUNTRY_0_DOT_0_LONGITUDE, TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_TYPE_DESC, TEST_KYLIN_FACT_0_DOT_0_ORDER_ID, TEST_KYLIN_FACT_0_DOT_0_SELLER_ID, TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_DISTINCT_BITMAP, TEST_KYLIN_FACT_0_DOT_0_LEAF_CATEG_ID, TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_GROUP_DESC, TEST_KYLIN_FACT_0_DOT_0_LSTG_SITE_ID, TEST_KYLIN_FACT_0_DOT_0_TRANS_ID, TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_UPD_USER, SELLER_COUNTRY_0_DOT_0_LATITUDE, TEST_KYLIN_FACT_0_DOT_0_LSTG_FORMAT_NAME, TEST_KYLIN_FACT_0_DOT_0_SLR_SEGMENT_CD, TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_CRE_DATE, TEST_SELLER_TYPE_DIM_0_DOT_0_GLBL_RPRT_SLR_SGMNT_CD, TEST_KYLIN_FACT_0_DOT_0_CAL_DT, TEST_KYLIN_FACT_0_DOT_0_PRICE, TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_CRE_USER, TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_UPD_DATE, TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_TYPE_CD, TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_GROUP_CD, TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_COLUMN, SELLER_COUNTRY_0_DOT_0_COUNTRY];;\n'Join Inner, ('SELLER_ACCOUNT_0_DOT_0_ACCOUNT_COUNTRY = SELLER_COUNTRY_0_DOT_0_COUNTRY#4896)\n:- Join Inner, (TEST_KYLIN_FACT_0_DOT_0_SLR_SEGMENT_CD#3909 = TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_TYPE_CD#4811)\n:  :- Project [TEST_KYLIN_FACT_0_DOT_0_TRANS_ID#3903L, TEST_KYLIN_FACT_0_DOT_0_ORDER_ID#3904L, TEST_KYLIN_FACT_0_DOT_0_CAL_DT#3905, TEST_KYLIN_FACT_0_DOT_0_LSTG_FORMAT_NAME#3906, TEST_KYLIN_FACT_0_DOT_0_LEAF_CATEG_ID#3907L, TEST_KYLIN_FACT_0_DOT_0_LSTG_SITE_ID#3908, TEST_KYLIN_FACT_0_DOT_0_SLR_SEGMENT_CD#3909, TEST_KYLIN_FACT_0_DOT_0_SELLER_ID#3910, TEST_KYLIN_FACT_0_DOT_0_PRICE#3911, TEST_KYLIN_FACT_0_DOT_0_ITEM_COUNT#3912, TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_DISTINCT_BITMAP#3913, TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_COLUMN#3914]\n:  :  +- Project [TRANS_ID#3861L AS TEST_KYLIN_FACT_0_DOT_0_TRANS_ID#3903L, ORDER_ID#3862L AS TEST_KYLIN_FACT_0_DOT_0_ORDER_ID#3904L, CAL_DT#3863 AS TEST_KYLIN_FACT_0_DOT_0_CAL_DT#3905, LSTG_FORMAT_NAME#3864 AS TEST_KYLIN_FACT_0_DOT_0_LSTG_FORMAT_NAME#3906, LEAF_CATEG_ID#3865L AS TEST_KYLIN_FACT_0_DOT_0_LEAF_CATEG_ID#3907L, LSTG_SITE_ID#3866 AS TEST_KYLIN_FACT_0_DOT_0_LSTG_SITE_ID#3908, SLR_SEGMENT_CD#3867 AS TEST_KYLIN_FACT_0_DOT_0_SLR_SEGMENT_CD#3909, SELLER_ID#3868 AS TEST_KYLIN_FACT_0_DOT_0_SELLER_ID#3910, PRICE#3869 AS TEST_KYLIN_FACT_0_DOT_0_PRICE#3911, ITEM_COUNT#3870 AS TEST_KYLIN_FACT_0_DOT_0_ITEM_COUNT#3912, TEST_COUNT_DISTINCT_BITMAP#3871 AS TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_DISTINCT_BITMAP#3913, TEST_COUNT_COLUMN#3872 AS TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_COLUMN#3914]\n:  :     +- SubqueryAlias `TEST_KYLIN_FACT`\n:  :        +- Relation[TRANS_ID#3861L,ORDER_ID#3862L,CAL_DT#3863,LSTG_FORMAT_NAME#3864,LEAF_CATEG_ID#3865L,LSTG_SITE_ID#3866,SLR_SEGMENT_CD#3867,SELLER_ID#3868,PRICE#3869,ITEM_COUNT#3870,TEST_COUNT_DISTINCT_BITMAP#3871,TEST_COUNT_COLUMN#3872] csv\n:  +- Project [TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_TYPE_CD#4811, TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_TYPE_DESC#4812, TEST_SELLER_TYPE_DIM_0_DOT_0_GLBL_RPRT_SLR_SGMNT_CD#4813, TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_GROUP_CD#4814, TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_GROUP_DESC#4815, TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_CRE_DATE#4816, TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_CRE_USER#4817, TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_UPD_DATE#4818, TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_UPD_USER#4819]\n:     +- Project [SELLER_TYPE_CD#4793 AS TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_TYPE_CD#4811, SELLER_TYPE_DESC#4794 AS TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_TYPE_DESC#4812, GLBL_RPRT_SLR_SGMNT_CD#4795 AS TEST_SELLER_TYPE_DIM_0_DOT_0_GLBL_RPRT_SLR_SGMNT_CD#4813, SELLER_GROUP_CD#4796 AS TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_GROUP_CD#4814, SELLER_GROUP_DESC#4797 AS TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_GROUP_DESC#4815, DIM_CRE_DATE#4798 AS TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_CRE_DATE#4816, DIM_CRE_USER#4799 AS TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_CRE_USER#4817, DIM_UPD_DATE#4800 AS TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_UPD_DATE#4818, DIM_UPD_USER#4801 AS TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_UPD_USER#4819]\n:        +- SubqueryAlias `TEST_SELLER_TYPE_DIM`\n:           +- Relation[SELLER_TYPE_CD#4793,SELLER_TYPE_DESC#4794,GLBL_RPRT_SLR_SGMNT_CD#4795,SELLER_GROUP_CD#4796,SELLER_GROUP_DESC#4797,DIM_CRE_DATE#4798,DIM_CRE_USER#4799,DIM_UPD_DATE#4800,DIM_UPD_USER#4801] csv\n+- Project [SELLER_COUNTRY_0_DOT_0_COUNTRY#4896, SELLER_COUNTRY_0_DOT_0_LATITUDE#4897, SELLER_COUNTRY_0_DOT_0_LONGITUDE#4898, SELLER_COUNTRY_0_DOT_0_NAME#4899]\n   +- Project [COUNTRY#4888 AS SELLER_COUNTRY_0_DOT_0_COUNTRY#4896, LATITUDE#4889 AS SELLER_COUNTRY_0_DOT_0_LATITUDE#4897, LONGITUDE#4890 AS SELLER_COUNTRY_0_DOT_0_LONGITUDE#4898, NAME#4891 AS SELLER_COUNTRY_0_DOT_0_NAME#4899]\n      +- SubqueryAlias `SELLER_COUNTRY`\n         +- Relation[COUNTRY#4888,LATITUDE#4889,LONGITUDE#4890,NAME#4891] csv\n\n\tat org.apache.spark.sql.catalyst.analysis.package$AnalysisErrorAt.failAnalysis(package.scala:42)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$3.applyOrElse(CheckAnalysis.scala:110)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$3.applyOrElse(CheckAnalysis.scala:107)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:278)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:278)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:70)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:277)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:275)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:275)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:326)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren(TreeNode.scala:324)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:275)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:93)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:93)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$1.apply(QueryPlan.scala:105)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$1.apply(QueryPlan.scala:105)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:70)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpression$1(QueryPlan.scala:104)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:116)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:117)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$2.apply(QueryPlan.scala:126)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions(QueryPlan.scala:126)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp(QueryPlan.scala:93)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:107)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:85)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp(TreeNode.scala:127)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$class.checkAnalysis(CheckAnalysis.scala:85)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer.checkAnalysis(Analyzer.scala:95)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$executeAndCheck$1.apply(Analyzer.scala:108)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$executeAndCheck$1.apply(Analyzer.scala:105)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.markInAnalyzer(AnalysisHelper.scala:201)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer.executeAndCheck(Analyzer.scala:105)\n\tat org.apache.spark.sql.execution.QueryExecution.analyzed$lzycompute(QueryExecution.scala:57)\n\tat org.apache.spark.sql.execution.QueryExecution.analyzed(QueryExecution.scala:55)\n\tat org.apache.spark.sql.execution.QueryExecution.assertAnalyzed(QueryExecution.scala:47)\n\tat org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:78)\n\tat org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$withPlan(Dataset.scala:3410)\n\tat org.apache.spark.sql.Dataset.join(Dataset.scala:995)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable$.joinTableDataset(CreateFlatTable.scala:191)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable$$anonfun$joinFactTableWithLookupTables$1.apply(CreateFlatTable.scala:165)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable$$anonfun$joinFactTableWithLookupTables$1.apply(CreateFlatTable.scala:164)\n\tat scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157)\n\tat scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157)\n\tat scala.collection.immutable.HashMap$HashMap1.foreach(HashMap.scala:221)\n\tat scala.collection.immutable.HashMap$HashTrieMap.foreach(HashMap.scala:428)\n\tat scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157)\n\tat scala.collection.AbstractTraversable.foldLeft(Traversable.scala:104)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable$.joinFactTableWithLookupTables(CreateFlatTable.scala:163)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable.generateDataset(CreateFlatTable.scala:68)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser.getFlatTable(ParentSourceChooser.scala:163)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser.io$kyligence$kap$engine$spark$job$ParentSourceChooser$$decideFlatTableSource(ParentSourceChooser.scala:73)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser$$anonfun$decideSources$1.apply(ParentSourceChooser.scala:59)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser$$anonfun$decideSources$1.apply(ParentSourceChooser.scala:54)\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:893)\n\tat scala.collection.AbstractIterator.foreach(Iterator.scala:1336)\n\tat scala.collection.IterableLike$class.foreach(IterableLike.scala:72)\n\tat scala.collection.AbstractIterable.foreach(Iterable.scala:54)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser.decideSources(ParentSourceChooser.scala:54)\n\tat io.kyligence.kap.engine.spark.job.ResourceDetectBeforeCubingJob.doExecute(ResourceDetectBeforeCubingJob.java:60)\n\tat io.kyligence.kap.engine.spark.application.SparkApplication.execute(SparkApplication.java:266)\n\tat io.kyligence.kap.engine.spark.application.SparkApplication.execute(SparkApplication.java:86)\n\t... 14 more\n",
  "status" : "ERROR",
  "info" : {
    "startTime" : "1576664951522",
    "endTime" : "1576664966310"
  }
}