{
  "uuid" : "c8d2ec80-1d44-488f-863f-05e25cc42eb1",
  "last_modified" : 1576666088585,
  "version" : "3.0.0.20500",
  "content" : "org.apache.kylin.job.exception.ExecuteException: java.lang.reflect.InvocationTargetException\n\tat org.apache.kylin.job.execution.AbstractExecutable.execute(AbstractExecutable.java:205)\n\tat org.apache.kylin.job.execution.DefaultChainedExecutable.doWork(DefaultChainedExecutable.java:76)\n\tat org.apache.kylin.job.execution.AbstractExecutable.execute(AbstractExecutable.java:190)\n\tat org.apache.kylin.job.impl.threadpool.DefaultScheduler$JobRunner.run(DefaultScheduler.java:114)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat io.kyligence.kap.engine.spark.job.NSparkExecutable.runLocalMode(NSparkExecutable.java:359)\n\tat io.kyligence.kap.engine.spark.job.NSparkExecutable.doWork(NSparkExecutable.java:153)\n\tat org.apache.kylin.job.execution.AbstractExecutable.execute(AbstractExecutable.java:190)\n\t... 6 more\nCaused by: java.lang.RuntimeException: Error execute io.kyligence.kap.engine.spark.job.ResourceDetectBeforeCubingJob\n\tat io.kyligence.kap.engine.spark.application.SparkApplication.execute(SparkApplication.java:89)\n\tat io.kyligence.kap.engine.spark.job.ResourceDetectBeforeCubingJob.main(ResourceDetectBeforeCubingJob.java:99)\n\t... 13 more\nCaused by: org.apache.spark.sql.AnalysisException: cannot resolve '`BUYER_ACCOUNT_0_DOT_0_ACCOUNT_COUNTRY`' given input columns: [TEST_CAL_DT_0_DOT_0_CAL_DT, TEST_CATEGORY_GROUPINGS_0_DOT_0_BSNS_VRTCL_NAME, TEST_CAL_DT_0_DOT_0_CAL_DT_CRE_DATE, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_1QTR_YN_ID, TEST_CAL_DT_0_DOT_0_QTR_END_DT, TEST_CATEGORY_GROUPINGS_0_DOT_0_META_CATEG_ID, TEST_CAL_DT_0_DOT_0_RETAIL_YEAR, TEST_CAL_DT_0_DOT_0_AGE_FOR_QTR_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL7_NAME, TEST_CAL_DT_0_DOT_0_RETAIL_WK_END_DATE, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_2MONTH_DT, TEST_CAL_DT_0_DOT_0_WEEK_BEG_DATE, TEST_CATEGORY_GROUPINGS_0_DOT_0_SAP_CATEGORY_ID, TEST_CAL_DT_0_DOT_0_YTQ_YN_ID, TEST_CAL_DT_0_DOT_0_AGE_FOR_MONTH_ID, TEST_CAL_DT_0_DOT_0_CAL_DT_UPD_USER, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_1WEEK_DT, TEST_CAL_DT_0_DOT_0_QTR_ID, TEST_KYLIN_FACT_0_DOT_0_SELLER_ID, TEST_CAL_DT_0_DOT_0_DAY_OF_YEAR_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL3_NAME, TEST_CAL_DT_0_DOT_0_QTR_BEG_DT, TEST_CAL_DT_0_DOT_0_PRD_FLAG, TEST_CAL_DT_0_DOT_0_SEASON_OF_YEAR_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_DOMAIN_ID, BUYER_COUNTRY_0_DOT_0_NAME, TEST_CAL_DT_0_DOT_0_PRD_IND, TEST_CAL_DT_0_DOT_0_WEEK_BEG_END_DESC_MDY, TEST_CAL_DT_0_DOT_0_DAY_OF_WEEK, TEST_CAL_DT_0_DOT_0_PRD_ID, TEST_CAL_DT_0_DOT_0_WEEK_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL2_ID, TEST_CAL_DT_0_DOT_0_WEEK_BEG_END_DESC_MD, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_FLAGS, TEST_KYLIN_FACT_0_DOT_0_TRANS_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL4_ID, TEST_CAL_DT_0_DOT_0_AGE_FOR_YEAR_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL4_NAME, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_1MONTH_YN_ID, TEST_CAL_DT_0_DOT_0_CAL_DT_UPD_DATE, TEST_CATEGORY_GROUPINGS_0_DOT_0_GCS_ID, TEST_CAL_DT_0_DOT_0_MONTH_BEG_DT, TEST_CATEGORY_GROUPINGS_0_DOT_0_REGN_CATEG, TEST_CATEGORY_GROUPINGS_0_DOT_0_GROUPINGS_CRE_USER, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_BUSN_MGR, TEST_CAL_DT_0_DOT_0_DAY_IN_WEEK_COUNT, TEST_KYLIN_FACT_0_DOT_0_SLR_SEGMENT_CD, TEST_CAL_DT_0_DOT_0_CS_WEEK_BEG_DT, TEST_CATEGORY_GROUPINGS_0_DOT_0_USER_DEFINED_FIELD1, TEST_CAL_DT_0_DOT_0_DAY_OF_CAL_ID, TEST_CAL_DT_0_DOT_0_MONTH_OF_YEAR_ID, BUYER_COUNTRY_0_DOT_0_LONGITUDE, TEST_KYLIN_FACT_0_DOT_0_ORDER_ID, TEST_CAL_DT_0_DOT_0_MTD_YN_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_GROUPINGS_CRE_DATE, TEST_KYLIN_FACT_0_DOT_0_ITEM_COUNT, TEST_CATEGORY_GROUPINGS_0_DOT_0_SITE_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL7_ID, TEST_CAL_DT_0_DOT_0_MONTH_ID, TEST_CAL_DT_0_DOT_0_WEEK_END_DT, TEST_CATEGORY_GROUPINGS_0_DOT_0_USER_DEFINED_FIELD5, TEST_CAL_DT_0_DOT_0_DAY_IN_MONTH_COUNT, TEST_CATEGORY_GROUPINGS_0_DOT_0_UPD_USER, TEST_CAL_DT_0_DOT_0_DAY_OF_QTR_ID, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_2MONTH_YN_ID, TEST_CAL_DT_0_DOT_0_RTL_QTR_OF_RTL_YEAR_ID, TEST_KYLIN_FACT_0_DOT_0_LSTG_SITE_ID, TEST_CAL_DT_0_DOT_0_RTL_WEEK_BEG_DT, TEST_CAL_DT_0_DOT_0_DAY_OF_WEEK_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL5_NAME, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL2_NAME, TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_COLUMN, TEST_CAL_DT_0_DOT_0_DAY_OF_MONTH_ID, TEST_CAL_DT_0_DOT_0_QTR_IND, TEST_CAL_DT_0_DOT_0_YEAR_BEG_DT, TEST_CAL_DT_0_DOT_0_CAL_DT_SHORT_NAME, TEST_CATEGORY_GROUPINGS_0_DOT_0_UPD_DATE, TEST_CAL_DT_0_DOT_0_QTR_OF_CAL_ID, TEST_CAL_DT_0_DOT_0_QTR_DESC, TEST_CAL_DT_0_DOT_0_WEEK_NUM_DESC, TEST_CAL_DT_0_DOT_0_RTL_MONTH_BEG_DT, TEST_CAL_DT_0_DOT_0_YTW_YN_ID, TEST_CAL_DT_0_DOT_0_YTD_YN_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_LEAF_CATEG_ID, TEST_CAL_DT_0_DOT_0_YEAR_OF_CAL_ID, TEST_CAL_DT_0_DOT_0_DAY_IN_YEAR_COUNT, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_2QTR_YN_ID, TEST_CAL_DT_0_DOT_0_AGE_FOR_CS_WEEK_ID, TEST_CAL_DT_0_DOT_0_RTL_QTR_BEG_DT, TEST_CAL_DT_0_DOT_0_WEEK_BEG_DT, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_2YEAR_YN_ID, TEST_CAL_DT_0_DOT_0_QTR_OF_YEAR_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_LEAF_CATEG_NAME, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_2WEEK_YN_IND, TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_DISTINCT_BITMAP, TEST_CAL_DT_0_DOT_0_CAL_DATE, TEST_CAL_DT_0_DOT_0_DAY_IN_QTR_COUNT, TEST_KYLIN_FACT_0_DOT_0_LEAF_CATEG_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL6_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_BUSN_UNIT, BUYER_COUNTRY_0_DOT_0_LATITUDE, TEST_KYLIN_FACT_0_DOT_0_LSTG_FORMAT_NAME, TEST_CAL_DT_0_DOT_0_RETAIL_START_DATE, TEST_CAL_DT_0_DOT_0_YEAR_ID, TEST_KYLIN_FACT_0_DOT_0_PRICE, TEST_CATEGORY_GROUPINGS_0_DOT_0_USER_DEFINED_FIELD3, TEST_CAL_DT_0_DOT_0_WEEK_IN_YEAR_ID, TEST_CAL_DT_0_DOT_0_QTD_YN_ID, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_2QTR_DT, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_QTR_ID, TEST_CAL_DT_0_DOT_0_MONTH_OF_CAL_ID, TEST_CAL_DT_0_DOT_0_YTM_YN_ID, TEST_KYLIN_FACT_0_DOT_0_CAL_DT, TEST_CAL_DT_0_DOT_0_CAL_DT_DESC, TEST_CATEGORY_GROUPINGS_0_DOT_0_MOVE_TO, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_1QTR_DT, TEST_CATEGORY_GROUPINGS_0_DOT_0_META_CATEG_NAME, TEST_CAL_DT_0_DOT_0_YEAR_END_DT, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_YEAR_ID, TEST_CAL_DT_0_DOT_0_WEEK_OF_CAL_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL3_ID, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_2WEEK_DT, TEST_CAL_DT_0_DOT_0_WEEK_OF_YEAR_ID, TEST_CAL_DT_0_DOT_0_YEAR_IND, TEST_CAL_DT_0_DOT_0_CAL_DT_NAME, BUYER_COUNTRY_0_DOT_0_COUNTRY, TEST_CAL_DT_0_DOT_0_RETAIL_WEEK, TEST_CAL_DT_0_DOT_0_CAL_DT_CRE_USER, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_1YEAR_DT, TEST_CAL_DT_0_DOT_0_WTD_YN_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL6_NAME, TEST_CATEGORY_GROUPINGS_0_DOT_0_ADULT_CATEG_YN, TEST_CAL_DT_0_DOT_0_MONTH_OF_QTR_ID, TEST_CAL_DT_0_DOT_0_PRD_DESC, TEST_CAL_DT_0_DOT_0_RTL_WEEK_OF_RTL_YEAR_ID, TEST_CAL_DT_0_DOT_0_RTL_MONTH_OF_RTL_YEAR_ID, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_1WEEK_YN_IND, TEST_CATEGORY_GROUPINGS_0_DOT_0_VCS_ID, TEST_CAL_DT_0_DOT_0_WEEK_IND, TEST_CAL_DT_0_DOT_0_WEEK_END_DATE, TEST_CAL_DT_0_DOT_0_SEASON_BEG_DT, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_1MONTH_DT, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL5_ID, TEST_CAL_DT_0_DOT_0_RTL_YEAR_BEG_DT, TEST_CATEGORY_GROUPINGS_0_DOT_0_SRC_ID, TEST_CAL_DT_0_DOT_0_AGE_FOR_WEEK_ID, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_MONTH_ID, TEST_CAL_DT_0_DOT_0_MONTH_END_DT, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_1YEAR_YN_ID, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_WEEK_ID, TEST_CAL_DT_0_DOT_0_AGE_FOR_DT_ID, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_2YEAR_DT];;\n'Join Inner, ('BUYER_ACCOUNT_0_DOT_0_ACCOUNT_COUNTRY = BUYER_COUNTRY_0_DOT_0_COUNTRY#1730)\n:- Join Inner, (TEST_KYLIN_FACT_0_DOT_0_CAL_DT#59 = TEST_CAL_DT_0_DOT_0_CAL_DT#620)\n:  :- Join Inner, ((TEST_KYLIN_FACT_0_DOT_0_LEAF_CATEG_ID#62L = TEST_CATEGORY_GROUPINGS_0_DOT_0_LEAF_CATEG_ID#1264L) && (TEST_KYLIN_FACT_0_DOT_0_LSTG_SITE_ID#63 = TEST_CATEGORY_GROUPINGS_0_DOT_0_SITE_ID#1266))\n:  :  :- Project [TEST_KYLIN_FACT_0_DOT_0_TRANS_ID#48L, TEST_KYLIN_FACT_0_DOT_0_ORDER_ID#57L, TEST_KYLIN_FACT_0_DOT_0_CAL_DT#59, TEST_KYLIN_FACT_0_DOT_0_LSTG_FORMAT_NAME#61, TEST_KYLIN_FACT_0_DOT_0_LEAF_CATEG_ID#62L, TEST_KYLIN_FACT_0_DOT_0_LSTG_SITE_ID#63, TEST_KYLIN_FACT_0_DOT_0_SLR_SEGMENT_CD#64, TEST_KYLIN_FACT_0_DOT_0_SELLER_ID#65, TEST_KYLIN_FACT_0_DOT_0_PRICE#67, TEST_KYLIN_FACT_0_DOT_0_ITEM_COUNT#69, TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_DISTINCT_BITMAP#70, TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_COLUMN#71]\n:  :  :  +- Project [TRANS_ID#0L AS TEST_KYLIN_FACT_0_DOT_0_TRANS_ID#48L, ORDER_ID#1L AS TEST_KYLIN_FACT_0_DOT_0_ORDER_ID#57L, CAL_DT#2 AS TEST_KYLIN_FACT_0_DOT_0_CAL_DT#59, LSTG_FORMAT_NAME#3 AS TEST_KYLIN_FACT_0_DOT_0_LSTG_FORMAT_NAME#61, LEAF_CATEG_ID#4L AS TEST_KYLIN_FACT_0_DOT_0_LEAF_CATEG_ID#62L, LSTG_SITE_ID#5 AS TEST_KYLIN_FACT_0_DOT_0_LSTG_SITE_ID#63, SLR_SEGMENT_CD#6 AS TEST_KYLIN_FACT_0_DOT_0_SLR_SEGMENT_CD#64, SELLER_ID#7 AS TEST_KYLIN_FACT_0_DOT_0_SELLER_ID#65, PRICE#8 AS TEST_KYLIN_FACT_0_DOT_0_PRICE#67, ITEM_COUNT#9 AS TEST_KYLIN_FACT_0_DOT_0_ITEM_COUNT#69, TEST_COUNT_DISTINCT_BITMAP#10 AS TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_DISTINCT_BITMAP#70, TEST_COUNT_COLUMN#11 AS TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_COLUMN#71]\n:  :  :     +- SubqueryAlias `TEST_KYLIN_FACT`\n:  :  :        +- Relation[TRANS_ID#0L,ORDER_ID#1L,CAL_DT#2,LSTG_FORMAT_NAME#3,LEAF_CATEG_ID#4L,LSTG_SITE_ID#5,SLR_SEGMENT_CD#6,SELLER_ID#7,PRICE#8,ITEM_COUNT#9,TEST_COUNT_DISTINCT_BITMAP#10,TEST_COUNT_COLUMN#11] csv\n:  :  +- Project [TEST_CATEGORY_GROUPINGS_0_DOT_0_LEAF_CATEG_ID#1264L, TEST_CATEGORY_GROUPINGS_0_DOT_0_LEAF_CATEG_NAME#1265, TEST_CATEGORY_GROUPINGS_0_DOT_0_SITE_ID#1266, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_BUSN_MGR#1267, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_BUSN_UNIT#1268, TEST_CATEGORY_GROUPINGS_0_DOT_0_REGN_CATEG#1269, TEST_CATEGORY_GROUPINGS_0_DOT_0_USER_DEFINED_FIELD1#1270, TEST_CATEGORY_GROUPINGS_0_DOT_0_USER_DEFINED_FIELD3#1271, TEST_CATEGORY_GROUPINGS_0_DOT_0_GROUPINGS_CRE_DATE#1272, TEST_CATEGORY_GROUPINGS_0_DOT_0_UPD_DATE#1273, TEST_CATEGORY_GROUPINGS_0_DOT_0_GROUPINGS_CRE_USER#1274, TEST_CATEGORY_GROUPINGS_0_DOT_0_UPD_USER#1275, TEST_CATEGORY_GROUPINGS_0_DOT_0_META_CATEG_ID#1276, TEST_CATEGORY_GROUPINGS_0_DOT_0_META_CATEG_NAME#1277, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL2_ID#1278, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL3_ID#1279, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL4_ID#1280, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL5_ID#1281, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL6_ID#1282, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL7_ID#1283, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL2_NAME#1284, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL3_NAME#1285, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL4_NAME#1286, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL5_NAME#1287, ... 12 more fields]\n:  :     +- Project [LEAF_CATEG_ID#1156L AS TEST_CATEGORY_GROUPINGS_0_DOT_0_LEAF_CATEG_ID#1264L, LEAF_CATEG_NAME#1157 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_LEAF_CATEG_NAME#1265, SITE_ID#1158 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_SITE_ID#1266, CATEG_BUSN_MGR#1159 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_BUSN_MGR#1267, CATEG_BUSN_UNIT#1160 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_BUSN_UNIT#1268, REGN_CATEG#1161 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_REGN_CATEG#1269, USER_DEFINED_FIELD1#1162 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_USER_DEFINED_FIELD1#1270, USER_DEFINED_FIELD3#1163 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_USER_DEFINED_FIELD3#1271, GROUPINGS_CRE_DATE#1164 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_GROUPINGS_CRE_DATE#1272, UPD_DATE#1165 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_UPD_DATE#1273, GROUPINGS_CRE_USER#1166 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_GROUPINGS_CRE_USER#1274, UPD_USER#1167 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_UPD_USER#1275, META_CATEG_ID#1168 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_META_CATEG_ID#1276, META_CATEG_NAME#1169 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_META_CATEG_NAME#1277, CATEG_LVL2_ID#1170 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL2_ID#1278, CATEG_LVL3_ID#1171 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL3_ID#1279, CATEG_LVL4_ID#1172 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL4_ID#1280, CATEG_LVL5_ID#1173 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL5_ID#1281, CATEG_LVL6_ID#1174 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL6_ID#1282, CATEG_LVL7_ID#1175 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL7_ID#1283, CATEG_LVL2_NAME#1176 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL2_NAME#1284, CATEG_LVL3_NAME#1177 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL3_NAME#1285, CATEG_LVL4_NAME#1178 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL4_NAME#1286, CATEG_LVL5_NAME#1179 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL5_NAME#1287, ... 12 more fields]\n:  :        +- SubqueryAlias `TEST_CATEGORY_GROUPINGS`\n:  :           +- Relation[LEAF_CATEG_ID#1156L,LEAF_CATEG_NAME#1157,SITE_ID#1158,CATEG_BUSN_MGR#1159,CATEG_BUSN_UNIT#1160,REGN_CATEG#1161,USER_DEFINED_FIELD1#1162,USER_DEFINED_FIELD3#1163,GROUPINGS_CRE_DATE#1164,UPD_DATE#1165,GROUPINGS_CRE_USER#1166,UPD_USER#1167,META_CATEG_ID#1168,META_CATEG_NAME#1169,CATEG_LVL2_ID#1170,CATEG_LVL3_ID#1171,CATEG_LVL4_ID#1172,CATEG_LVL5_ID#1173,CATEG_LVL6_ID#1174,CATEG_LVL7_ID#1175,CATEG_LVL2_NAME#1176,CATEG_LVL3_NAME#1177,CATEG_LVL4_NAME#1178,CATEG_LVL5_NAME#1179,... 12 more fields] csv\n:  +- Project [TEST_CAL_DT_0_DOT_0_CAL_DT#620, TEST_CAL_DT_0_DOT_0_YEAR_BEG_DT#621, TEST_CAL_DT_0_DOT_0_QTR_BEG_DT#622, TEST_CAL_DT_0_DOT_0_MONTH_BEG_DT#623, TEST_CAL_DT_0_DOT_0_WEEK_BEG_DT#624, TEST_CAL_DT_0_DOT_0_AGE_FOR_YEAR_ID#625, TEST_CAL_DT_0_DOT_0_AGE_FOR_QTR_ID#626, TEST_CAL_DT_0_DOT_0_AGE_FOR_MONTH_ID#627, TEST_CAL_DT_0_DOT_0_AGE_FOR_WEEK_ID#628, TEST_CAL_DT_0_DOT_0_AGE_FOR_DT_ID#629, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_YEAR_ID#630, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_QTR_ID#631, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_MONTH_ID#632, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_WEEK_ID#633, TEST_CAL_DT_0_DOT_0_AGE_FOR_CS_WEEK_ID#634, TEST_CAL_DT_0_DOT_0_DAY_OF_CAL_ID#635, TEST_CAL_DT_0_DOT_0_DAY_OF_YEAR_ID#636, TEST_CAL_DT_0_DOT_0_DAY_OF_QTR_ID#637, TEST_CAL_DT_0_DOT_0_DAY_OF_MONTH_ID#638, TEST_CAL_DT_0_DOT_0_DAY_OF_WEEK_ID#639, TEST_CAL_DT_0_DOT_0_WEEK_OF_YEAR_ID#640, TEST_CAL_DT_0_DOT_0_WEEK_OF_CAL_ID#641, TEST_CAL_DT_0_DOT_0_MONTH_OF_QTR_ID#642, TEST_CAL_DT_0_DOT_0_MONTH_OF_YEAR_ID#643, ... 76 more fields]\n:     +- Project [CAL_DT#220 AS TEST_CAL_DT_0_DOT_0_CAL_DT#620, YEAR_BEG_DT#221 AS TEST_CAL_DT_0_DOT_0_YEAR_BEG_DT#621, QTR_BEG_DT#222 AS TEST_CAL_DT_0_DOT_0_QTR_BEG_DT#622, MONTH_BEG_DT#223 AS TEST_CAL_DT_0_DOT_0_MONTH_BEG_DT#623, WEEK_BEG_DT#224 AS TEST_CAL_DT_0_DOT_0_WEEK_BEG_DT#624, AGE_FOR_YEAR_ID#225 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_YEAR_ID#625, AGE_FOR_QTR_ID#226 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_QTR_ID#626, AGE_FOR_MONTH_ID#227 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_MONTH_ID#627, AGE_FOR_WEEK_ID#228 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_WEEK_ID#628, AGE_FOR_DT_ID#229 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_DT_ID#629, AGE_FOR_RTL_YEAR_ID#230 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_YEAR_ID#630, AGE_FOR_RTL_QTR_ID#231 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_QTR_ID#631, AGE_FOR_RTL_MONTH_ID#232 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_MONTH_ID#632, AGE_FOR_RTL_WEEK_ID#233 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_WEEK_ID#633, AGE_FOR_CS_WEEK_ID#234 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_CS_WEEK_ID#634, DAY_OF_CAL_ID#235 AS TEST_CAL_DT_0_DOT_0_DAY_OF_CAL_ID#635, DAY_OF_YEAR_ID#236 AS TEST_CAL_DT_0_DOT_0_DAY_OF_YEAR_ID#636, DAY_OF_QTR_ID#237 AS TEST_CAL_DT_0_DOT_0_DAY_OF_QTR_ID#637, DAY_OF_MONTH_ID#238 AS TEST_CAL_DT_0_DOT_0_DAY_OF_MONTH_ID#638, DAY_OF_WEEK_ID#239 AS TEST_CAL_DT_0_DOT_0_DAY_OF_WEEK_ID#639, WEEK_OF_YEAR_ID#240 AS TEST_CAL_DT_0_DOT_0_WEEK_OF_YEAR_ID#640, WEEK_OF_CAL_ID#241 AS TEST_CAL_DT_0_DOT_0_WEEK_OF_CAL_ID#641, MONTH_OF_QTR_ID#242 AS TEST_CAL_DT_0_DOT_0_MONTH_OF_QTR_ID#642, MONTH_OF_YEAR_ID#243 AS TEST_CAL_DT_0_DOT_0_MONTH_OF_YEAR_ID#643, ... 76 more fields]\n:        +- SubqueryAlias `TEST_CAL_DT`\n:           +- Relation[CAL_DT#220,YEAR_BEG_DT#221,QTR_BEG_DT#222,MONTH_BEG_DT#223,WEEK_BEG_DT#224,AGE_FOR_YEAR_ID#225,AGE_FOR_QTR_ID#226,AGE_FOR_MONTH_ID#227,AGE_FOR_WEEK_ID#228,AGE_FOR_DT_ID#229,AGE_FOR_RTL_YEAR_ID#230,AGE_FOR_RTL_QTR_ID#231,AGE_FOR_RTL_MONTH_ID#232,AGE_FOR_RTL_WEEK_ID#233,AGE_FOR_CS_WEEK_ID#234,DAY_OF_CAL_ID#235,DAY_OF_YEAR_ID#236,DAY_OF_QTR_ID#237,DAY_OF_MONTH_ID#238,DAY_OF_WEEK_ID#239,WEEK_OF_YEAR_ID#240,WEEK_OF_CAL_ID#241,MONTH_OF_QTR_ID#242,MONTH_OF_YEAR_ID#243,... 76 more fields] csv\n+- Project [BUYER_COUNTRY_0_DOT_0_COUNTRY#1730, BUYER_COUNTRY_0_DOT_0_LATITUDE#1731, BUYER_COUNTRY_0_DOT_0_LONGITUDE#1732, BUYER_COUNTRY_0_DOT_0_NAME#1733]\n   +- Project [COUNTRY#1712 AS BUYER_COUNTRY_0_DOT_0_COUNTRY#1730, LATITUDE#1715 AS BUYER_COUNTRY_0_DOT_0_LATITUDE#1731, LONGITUDE#1716 AS BUYER_COUNTRY_0_DOT_0_LONGITUDE#1732, NAME#1717 AS BUYER_COUNTRY_0_DOT_0_NAME#1733]\n      +- SubqueryAlias `BUYER_COUNTRY`\n         +- Relation[COUNTRY#1712,LATITUDE#1715,LONGITUDE#1716,NAME#1717] csv\n\n\tat org.apache.spark.sql.catalyst.analysis.package$AnalysisErrorAt.failAnalysis(package.scala:42)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$3.applyOrElse(CheckAnalysis.scala:110)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$3.applyOrElse(CheckAnalysis.scala:107)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:278)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:278)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:70)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:277)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:275)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:275)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:326)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren(TreeNode.scala:324)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:275)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:93)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:93)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$1.apply(QueryPlan.scala:105)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$1.apply(QueryPlan.scala:105)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:70)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpression$1(QueryPlan.scala:104)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:116)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:117)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$2.apply(QueryPlan.scala:126)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions(QueryPlan.scala:126)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp(QueryPlan.scala:93)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:107)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:85)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp(TreeNode.scala:127)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$class.checkAnalysis(CheckAnalysis.scala:85)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer.checkAnalysis(Analyzer.scala:95)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$executeAndCheck$1.apply(Analyzer.scala:108)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$executeAndCheck$1.apply(Analyzer.scala:105)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.markInAnalyzer(AnalysisHelper.scala:201)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer.executeAndCheck(Analyzer.scala:105)\n\tat org.apache.spark.sql.execution.QueryExecution.analyzed$lzycompute(QueryExecution.scala:57)\n\tat org.apache.spark.sql.execution.QueryExecution.analyzed(QueryExecution.scala:55)\n\tat org.apache.spark.sql.execution.QueryExecution.assertAnalyzed(QueryExecution.scala:47)\n\tat org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:78)\n\tat org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$withPlan(Dataset.scala:3410)\n\tat org.apache.spark.sql.Dataset.join(Dataset.scala:995)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable$.joinTableDataset(CreateFlatTable.scala:191)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable$$anonfun$joinFactTableWithLookupTables$1.apply(CreateFlatTable.scala:165)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable$$anonfun$joinFactTableWithLookupTables$1.apply(CreateFlatTable.scala:164)\n\tat scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157)\n\tat scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157)\n\tat scala.collection.immutable.HashMap$HashMap1.foreach(HashMap.scala:221)\n\tat scala.collection.immutable.HashMap$HashTrieMap.foreach(HashMap.scala:428)\n\tat scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157)\n\tat scala.collection.AbstractTraversable.foldLeft(Traversable.scala:104)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable$.joinFactTableWithLookupTables(CreateFlatTable.scala:163)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable.generateDataset(CreateFlatTable.scala:68)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser.getFlatTable(ParentSourceChooser.scala:163)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser.io$kyligence$kap$engine$spark$job$ParentSourceChooser$$decideFlatTableSource(ParentSourceChooser.scala:73)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser$$anonfun$decideSources$1.apply(ParentSourceChooser.scala:59)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser$$anonfun$decideSources$1.apply(ParentSourceChooser.scala:54)\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:893)\n\tat scala.collection.AbstractIterator.foreach(Iterator.scala:1336)\n\tat scala.collection.IterableLike$class.foreach(IterableLike.scala:72)\n\tat scala.collection.AbstractIterable.foreach(Iterable.scala:54)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser.decideSources(ParentSourceChooser.scala:54)\n\tat io.kyligence.kap.engine.spark.job.ResourceDetectBeforeCubingJob.doExecute(ResourceDetectBeforeCubingJob.java:60)\n\tat io.kyligence.kap.engine.spark.application.SparkApplication.execute(SparkApplication.java:266)\n\tat io.kyligence.kap.engine.spark.application.SparkApplication.execute(SparkApplication.java:86)\n\t... 14 more\n",
  "status" : "ERROR",
  "info" : {
    "startTime" : "1576665953273",
    "buildInstance" : "97536@yimingxumac.local",
    "endTime" : "1576666088573"
  }
}