{
  "uuid" : "0eeba7dd-3900-4c1b-9513-e12683083efa",
  "last_modified" : 1576666088592,
  "version" : "3.0.0.20500",
  "content" : "org.apache.kylin.job.exception.ExecuteException: java.lang.reflect.InvocationTargetException\n\tat org.apache.kylin.job.execution.AbstractExecutable.execute(AbstractExecutable.java:205)\n\tat org.apache.kylin.job.execution.DefaultChainedExecutable.doWork(DefaultChainedExecutable.java:76)\n\tat org.apache.kylin.job.execution.AbstractExecutable.execute(AbstractExecutable.java:190)\n\tat org.apache.kylin.job.impl.threadpool.DefaultScheduler$JobRunner.run(DefaultScheduler.java:114)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat io.kyligence.kap.engine.spark.job.NSparkExecutable.runLocalMode(NSparkExecutable.java:359)\n\tat io.kyligence.kap.engine.spark.job.NSparkExecutable.doWork(NSparkExecutable.java:153)\n\tat org.apache.kylin.job.execution.AbstractExecutable.execute(AbstractExecutable.java:190)\n\t... 6 more\nCaused by: java.lang.RuntimeException: Error execute io.kyligence.kap.engine.spark.job.ResourceDetectBeforeCubingJob\n\tat io.kyligence.kap.engine.spark.application.SparkApplication.execute(SparkApplication.java:89)\n\tat io.kyligence.kap.engine.spark.job.ResourceDetectBeforeCubingJob.main(ResourceDetectBeforeCubingJob.java:99)\n\t... 13 more\nCaused by: org.apache.spark.sql.AnalysisException: cannot resolve '`SELLER_ACCOUNT_0_DOT_0_ACCOUNT_COUNTRY`' given input columns: [TEST_CAL_DT_0_DOT_0_MONTH_OF_YEAR_ID, TEST_CAL_DT_0_DOT_0_RTL_QTR_OF_RTL_YEAR_ID, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_1YEAR_YN_ID, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_1QTR_YN_ID, TEST_CAL_DT_0_DOT_0_DAY_IN_YEAR_COUNT, TEST_CAL_DT_0_DOT_0_WEEK_BEG_DT, TEST_CAL_DT_0_DOT_0_CAL_DT_CRE_DATE, TEST_CAL_DT_0_DOT_0_CS_WEEK_BEG_DT, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_2MONTH_DT, TEST_CAL_DT_0_DOT_0_WEEK_ID, TEST_CAL_DT_0_DOT_0_YEAR_ID, TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_CRE_DATE, TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_UPD_USER, TEST_CAL_DT_0_DOT_0_DAY_OF_WEEK_ID, TEST_CAL_DT_0_DOT_0_CAL_DT_UPD_DATE, TEST_CAL_DT_0_DOT_0_QTR_OF_YEAR_ID, TEST_CAL_DT_0_DOT_0_YTM_YN_ID, TEST_CAL_DT_0_DOT_0_PRD_ID, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_1QTR_DT, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_1WEEK_DT, TEST_CAL_DT_0_DOT_0_CAL_DT_NAME, TEST_KYLIN_FACT_0_DOT_0_LSTG_FORMAT_NAME, TEST_CAL_DT_0_DOT_0_MONTH_OF_QTR_ID, TEST_CAL_DT_0_DOT_0_MONTH_OF_CAL_ID, TEST_CAL_DT_0_DOT_0_RTL_WEEK_BEG_DT, TEST_CAL_DT_0_DOT_0_AGE_FOR_MONTH_ID, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_2YEAR_DT, TEST_CAL_DT_0_DOT_0_WEEK_END_DATE, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_2WEEK_DT, TEST_CAL_DT_0_DOT_0_MTD_YN_ID, TEST_CAL_DT_0_DOT_0_PRD_DESC, TEST_CAL_DT_0_DOT_0_DAY_OF_MONTH_ID, TEST_CAL_DT_0_DOT_0_QTR_ID, TEST_CAL_DT_0_DOT_0_WEEK_OF_CAL_ID, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_1YEAR_DT, TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_UPD_DATE, TEST_CAL_DT_0_DOT_0_RETAIL_WK_END_DATE, TEST_CAL_DT_0_DOT_0_QTR_DESC, TEST_CAL_DT_0_DOT_0_DAY_OF_YEAR_ID, TEST_CAL_DT_0_DOT_0_RETAIL_START_DATE, TEST_CAL_DT_0_DOT_0_DAY_OF_CAL_ID, TEST_CAL_DT_0_DOT_0_YTQ_YN_ID, TEST_CAL_DT_0_DOT_0_QTD_YN_ID, TEST_CAL_DT_0_DOT_0_WEEK_NUM_DESC, TEST_CAL_DT_0_DOT_0_AGE_FOR_WEEK_ID, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_2QTR_YN_ID, TEST_CAL_DT_0_DOT_0_DAY_OF_QTR_ID, TEST_CAL_DT_0_DOT_0_DAY_IN_MONTH_COUNT, TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_DISTINCT_BITMAP, TEST_CAL_DT_0_DOT_0_WEEK_END_DT, TEST_CAL_DT_0_DOT_0_QTR_IND, TEST_CAL_DT_0_DOT_0_CAL_DT, TEST_CAL_DT_0_DOT_0_SEASON_BEG_DT, TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_CRE_USER, TEST_CAL_DT_0_DOT_0_RTL_QTR_BEG_DT, TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_TYPE_CD, TEST_CAL_DT_0_DOT_0_RTL_MONTH_OF_RTL_YEAR_ID, TEST_CAL_DT_0_DOT_0_RTL_YEAR_BEG_DT, TEST_KYLIN_FACT_0_DOT_0_ITEM_COUNT, SELLER_COUNTRY_0_DOT_0_LATITUDE, TEST_CAL_DT_0_DOT_0_AGE_FOR_CS_WEEK_ID, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_1MONTH_DT, TEST_CAL_DT_0_DOT_0_AGE_FOR_QTR_ID, TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_GROUP_DESC, SELLER_COUNTRY_0_DOT_0_COUNTRY, TEST_CAL_DT_0_DOT_0_DAY_OF_WEEK, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_2QTR_DT, TEST_CAL_DT_0_DOT_0_YEAR_OF_CAL_ID, TEST_CAL_DT_0_DOT_0_RTL_MONTH_BEG_DT, TEST_CAL_DT_0_DOT_0_WEEK_BEG_END_DESC_MDY, TEST_CAL_DT_0_DOT_0_RTL_WEEK_OF_RTL_YEAR_ID, TEST_CAL_DT_0_DOT_0_AGE_FOR_DT_ID, TEST_CAL_DT_0_DOT_0_MONTH_ID, TEST_CAL_DT_0_DOT_0_MONTH_BEG_DT, SELLER_COUNTRY_0_DOT_0_LONGITUDE, TEST_CAL_DT_0_DOT_0_WEEK_IND, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_2MONTH_YN_ID, TEST_CAL_DT_0_DOT_0_WEEK_BEG_END_DESC_MD, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_WEEK_ID, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_1WEEK_YN_IND, TEST_KYLIN_FACT_0_DOT_0_TRANS_ID, TEST_CAL_DT_0_DOT_0_RETAIL_WEEK, TEST_CAL_DT_0_DOT_0_CAL_DATE, TEST_CAL_DT_0_DOT_0_WEEK_BEG_DATE, TEST_CAL_DT_0_DOT_0_DAY_IN_WEEK_COUNT, TEST_CAL_DT_0_DOT_0_YEAR_BEG_DT, TEST_SELLER_TYPE_DIM_0_DOT_0_GLBL_RPRT_SLR_SGMNT_CD, TEST_KYLIN_FACT_0_DOT_0_LEAF_CATEG_ID, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_2YEAR_YN_ID, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_YEAR_ID, TEST_CAL_DT_0_DOT_0_YEAR_IND, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_MONTH_ID, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_QTR_ID, TEST_CAL_DT_0_DOT_0_WEEK_OF_YEAR_ID, TEST_CAL_DT_0_DOT_0_YTW_YN_ID, TEST_CAL_DT_0_DOT_0_CAL_DT_CRE_USER, TEST_CAL_DT_0_DOT_0_QTR_END_DT, TEST_CAL_DT_0_DOT_0_MONTH_END_DT, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_2WEEK_YN_IND, SELLER_COUNTRY_0_DOT_0_NAME, TEST_CAL_DT_0_DOT_0_SEASON_OF_YEAR_ID, TEST_CAL_DT_0_DOT_0_WTD_YN_ID, TEST_KYLIN_FACT_0_DOT_0_PRICE, TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_GROUP_CD, TEST_CAL_DT_0_DOT_0_DAY_IN_QTR_COUNT, TEST_CAL_DT_0_DOT_0_CAL_DT_SHORT_NAME, TEST_KYLIN_FACT_0_DOT_0_SELLER_ID, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_1MONTH_YN_ID, TEST_CAL_DT_0_DOT_0_CAL_DT_UPD_USER, TEST_KYLIN_FACT_0_DOT_0_LSTG_SITE_ID, TEST_CAL_DT_0_DOT_0_QTR_OF_CAL_ID, TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_TYPE_DESC, TEST_CAL_DT_0_DOT_0_QTR_BEG_DT, TEST_KYLIN_FACT_0_DOT_0_CAL_DT, TEST_KYLIN_FACT_0_DOT_0_SLR_SEGMENT_CD, TEST_CAL_DT_0_DOT_0_RETAIL_YEAR, TEST_KYLIN_FACT_0_DOT_0_ORDER_ID, TEST_CAL_DT_0_DOT_0_WEEK_IN_YEAR_ID, TEST_CAL_DT_0_DOT_0_PRD_FLAG, TEST_CAL_DT_0_DOT_0_YTD_YN_ID, TEST_CAL_DT_0_DOT_0_CAL_DT_DESC, TEST_CAL_DT_0_DOT_0_YEAR_END_DT, TEST_CAL_DT_0_DOT_0_PRD_IND, TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_COLUMN, TEST_CAL_DT_0_DOT_0_AGE_FOR_YEAR_ID];;\n'Join Inner, ('SELLER_ACCOUNT_0_DOT_0_ACCOUNT_COUNTRY = SELLER_COUNTRY_0_DOT_0_COUNTRY#1690)\n:- Join Inner, (TEST_KYLIN_FACT_0_DOT_0_SLR_SEGMENT_CD#55 = TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_TYPE_CD#1634)\n:  :- Join Inner, (TEST_KYLIN_FACT_0_DOT_0_CAL_DT#51 = TEST_CAL_DT_0_DOT_0_CAL_DT#520)\n:  :  :- Project [TEST_KYLIN_FACT_0_DOT_0_TRANS_ID#49L, TEST_KYLIN_FACT_0_DOT_0_ORDER_ID#50L, TEST_KYLIN_FACT_0_DOT_0_CAL_DT#51, TEST_KYLIN_FACT_0_DOT_0_LSTG_FORMAT_NAME#52, TEST_KYLIN_FACT_0_DOT_0_LEAF_CATEG_ID#53L, TEST_KYLIN_FACT_0_DOT_0_LSTG_SITE_ID#54, TEST_KYLIN_FACT_0_DOT_0_SLR_SEGMENT_CD#55, TEST_KYLIN_FACT_0_DOT_0_SELLER_ID#56, TEST_KYLIN_FACT_0_DOT_0_PRICE#58, TEST_KYLIN_FACT_0_DOT_0_ITEM_COUNT#60, TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_DISTINCT_BITMAP#66, TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_COLUMN#68]\n:  :  :  +- Project [TRANS_ID#12L AS TEST_KYLIN_FACT_0_DOT_0_TRANS_ID#49L, ORDER_ID#13L AS TEST_KYLIN_FACT_0_DOT_0_ORDER_ID#50L, CAL_DT#14 AS TEST_KYLIN_FACT_0_DOT_0_CAL_DT#51, LSTG_FORMAT_NAME#15 AS TEST_KYLIN_FACT_0_DOT_0_LSTG_FORMAT_NAME#52, LEAF_CATEG_ID#16L AS TEST_KYLIN_FACT_0_DOT_0_LEAF_CATEG_ID#53L, LSTG_SITE_ID#17 AS TEST_KYLIN_FACT_0_DOT_0_LSTG_SITE_ID#54, SLR_SEGMENT_CD#18 AS TEST_KYLIN_FACT_0_DOT_0_SLR_SEGMENT_CD#55, SELLER_ID#19 AS TEST_KYLIN_FACT_0_DOT_0_SELLER_ID#56, PRICE#20 AS TEST_KYLIN_FACT_0_DOT_0_PRICE#58, ITEM_COUNT#21 AS TEST_KYLIN_FACT_0_DOT_0_ITEM_COUNT#60, TEST_COUNT_DISTINCT_BITMAP#22 AS TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_DISTINCT_BITMAP#66, TEST_COUNT_COLUMN#23 AS TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_COLUMN#68]\n:  :  :     +- SubqueryAlias `TEST_KYLIN_FACT`\n:  :  :        +- Relation[TRANS_ID#12L,ORDER_ID#13L,CAL_DT#14,LSTG_FORMAT_NAME#15,LEAF_CATEG_ID#16L,LSTG_SITE_ID#17,SLR_SEGMENT_CD#18,SELLER_ID#19,PRICE#20,ITEM_COUNT#21,TEST_COUNT_DISTINCT_BITMAP#22,TEST_COUNT_COLUMN#23] csv\n:  :  +- Project [TEST_CAL_DT_0_DOT_0_CAL_DT#520, TEST_CAL_DT_0_DOT_0_YEAR_BEG_DT#521, TEST_CAL_DT_0_DOT_0_QTR_BEG_DT#522, TEST_CAL_DT_0_DOT_0_MONTH_BEG_DT#523, TEST_CAL_DT_0_DOT_0_WEEK_BEG_DT#524, TEST_CAL_DT_0_DOT_0_AGE_FOR_YEAR_ID#525, TEST_CAL_DT_0_DOT_0_AGE_FOR_QTR_ID#526, TEST_CAL_DT_0_DOT_0_AGE_FOR_MONTH_ID#527, TEST_CAL_DT_0_DOT_0_AGE_FOR_WEEK_ID#528, TEST_CAL_DT_0_DOT_0_AGE_FOR_DT_ID#529, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_YEAR_ID#530, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_QTR_ID#531, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_MONTH_ID#532, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_WEEK_ID#533, TEST_CAL_DT_0_DOT_0_AGE_FOR_CS_WEEK_ID#534, TEST_CAL_DT_0_DOT_0_DAY_OF_CAL_ID#535, TEST_CAL_DT_0_DOT_0_DAY_OF_YEAR_ID#536, TEST_CAL_DT_0_DOT_0_DAY_OF_QTR_ID#537, TEST_CAL_DT_0_DOT_0_DAY_OF_MONTH_ID#538, TEST_CAL_DT_0_DOT_0_DAY_OF_WEEK_ID#539, TEST_CAL_DT_0_DOT_0_WEEK_OF_YEAR_ID#540, TEST_CAL_DT_0_DOT_0_WEEK_OF_CAL_ID#541, TEST_CAL_DT_0_DOT_0_MONTH_OF_QTR_ID#542, TEST_CAL_DT_0_DOT_0_MONTH_OF_YEAR_ID#543, ... 76 more fields]\n:  :     +- Project [CAL_DT#120 AS TEST_CAL_DT_0_DOT_0_CAL_DT#520, YEAR_BEG_DT#121 AS TEST_CAL_DT_0_DOT_0_YEAR_BEG_DT#521, QTR_BEG_DT#122 AS TEST_CAL_DT_0_DOT_0_QTR_BEG_DT#522, MONTH_BEG_DT#123 AS TEST_CAL_DT_0_DOT_0_MONTH_BEG_DT#523, WEEK_BEG_DT#124 AS TEST_CAL_DT_0_DOT_0_WEEK_BEG_DT#524, AGE_FOR_YEAR_ID#125 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_YEAR_ID#525, AGE_FOR_QTR_ID#126 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_QTR_ID#526, AGE_FOR_MONTH_ID#127 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_MONTH_ID#527, AGE_FOR_WEEK_ID#128 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_WEEK_ID#528, AGE_FOR_DT_ID#129 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_DT_ID#529, AGE_FOR_RTL_YEAR_ID#130 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_YEAR_ID#530, AGE_FOR_RTL_QTR_ID#131 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_QTR_ID#531, AGE_FOR_RTL_MONTH_ID#132 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_MONTH_ID#532, AGE_FOR_RTL_WEEK_ID#133 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_WEEK_ID#533, AGE_FOR_CS_WEEK_ID#134 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_CS_WEEK_ID#534, DAY_OF_CAL_ID#135 AS TEST_CAL_DT_0_DOT_0_DAY_OF_CAL_ID#535, DAY_OF_YEAR_ID#136 AS TEST_CAL_DT_0_DOT_0_DAY_OF_YEAR_ID#536, DAY_OF_QTR_ID#137 AS TEST_CAL_DT_0_DOT_0_DAY_OF_QTR_ID#537, DAY_OF_MONTH_ID#138 AS TEST_CAL_DT_0_DOT_0_DAY_OF_MONTH_ID#538, DAY_OF_WEEK_ID#139 AS TEST_CAL_DT_0_DOT_0_DAY_OF_WEEK_ID#539, WEEK_OF_YEAR_ID#140 AS TEST_CAL_DT_0_DOT_0_WEEK_OF_YEAR_ID#540, WEEK_OF_CAL_ID#141 AS TEST_CAL_DT_0_DOT_0_WEEK_OF_CAL_ID#541, MONTH_OF_QTR_ID#142 AS TEST_CAL_DT_0_DOT_0_MONTH_OF_QTR_ID#542, MONTH_OF_YEAR_ID#143 AS TEST_CAL_DT_0_DOT_0_MONTH_OF_YEAR_ID#543, ... 76 more fields]\n:  :        +- SubqueryAlias `TEST_CAL_DT`\n:  :           +- Relation[CAL_DT#120,YEAR_BEG_DT#121,QTR_BEG_DT#122,MONTH_BEG_DT#123,WEEK_BEG_DT#124,AGE_FOR_YEAR_ID#125,AGE_FOR_QTR_ID#126,AGE_FOR_MONTH_ID#127,AGE_FOR_WEEK_ID#128,AGE_FOR_DT_ID#129,AGE_FOR_RTL_YEAR_ID#130,AGE_FOR_RTL_QTR_ID#131,AGE_FOR_RTL_MONTH_ID#132,AGE_FOR_RTL_WEEK_ID#133,AGE_FOR_CS_WEEK_ID#134,DAY_OF_CAL_ID#135,DAY_OF_YEAR_ID#136,DAY_OF_QTR_ID#137,DAY_OF_MONTH_ID#138,DAY_OF_WEEK_ID#139,WEEK_OF_YEAR_ID#140,WEEK_OF_CAL_ID#141,MONTH_OF_QTR_ID#142,MONTH_OF_YEAR_ID#143,... 76 more fields] csv\n:  +- Project [TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_TYPE_CD#1634, TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_TYPE_DESC#1635, TEST_SELLER_TYPE_DIM_0_DOT_0_GLBL_RPRT_SLR_SGMNT_CD#1636, TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_GROUP_CD#1637, TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_GROUP_DESC#1638, TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_CRE_DATE#1639, TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_CRE_USER#1640, TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_UPD_DATE#1641, TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_UPD_USER#1642]\n:     +- Project [SELLER_TYPE_CD#1607 AS TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_TYPE_CD#1634, SELLER_TYPE_DESC#1608 AS TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_TYPE_DESC#1635, GLBL_RPRT_SLR_SGMNT_CD#1609 AS TEST_SELLER_TYPE_DIM_0_DOT_0_GLBL_RPRT_SLR_SGMNT_CD#1636, SELLER_GROUP_CD#1610 AS TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_GROUP_CD#1637, SELLER_GROUP_DESC#1611 AS TEST_SELLER_TYPE_DIM_0_DOT_0_SELLER_GROUP_DESC#1638, DIM_CRE_DATE#1612 AS TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_CRE_DATE#1639, DIM_CRE_USER#1613 AS TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_CRE_USER#1640, DIM_UPD_DATE#1614 AS TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_UPD_DATE#1641, DIM_UPD_USER#1615 AS TEST_SELLER_TYPE_DIM_0_DOT_0_DIM_UPD_USER#1642]\n:        +- SubqueryAlias `TEST_SELLER_TYPE_DIM`\n:           +- Relation[SELLER_TYPE_CD#1607,SELLER_TYPE_DESC#1608,GLBL_RPRT_SLR_SGMNT_CD#1609,SELLER_GROUP_CD#1610,SELLER_GROUP_DESC#1611,DIM_CRE_DATE#1612,DIM_CRE_USER#1613,DIM_UPD_DATE#1614,DIM_UPD_USER#1615] csv\n+- Project [SELLER_COUNTRY_0_DOT_0_COUNTRY#1690, SELLER_COUNTRY_0_DOT_0_LATITUDE#1691, SELLER_COUNTRY_0_DOT_0_LONGITUDE#1692, SELLER_COUNTRY_0_DOT_0_NAME#1693]\n   +- Project [COUNTRY#1674 AS SELLER_COUNTRY_0_DOT_0_COUNTRY#1690, LATITUDE#1675 AS SELLER_COUNTRY_0_DOT_0_LATITUDE#1691, LONGITUDE#1676 AS SELLER_COUNTRY_0_DOT_0_LONGITUDE#1692, NAME#1677 AS SELLER_COUNTRY_0_DOT_0_NAME#1693]\n      +- SubqueryAlias `SELLER_COUNTRY`\n         +- Relation[COUNTRY#1674,LATITUDE#1675,LONGITUDE#1676,NAME#1677] csv\n\n\tat org.apache.spark.sql.catalyst.analysis.package$AnalysisErrorAt.failAnalysis(package.scala:42)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$3.applyOrElse(CheckAnalysis.scala:110)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$3.applyOrElse(CheckAnalysis.scala:107)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:278)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:278)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:70)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:277)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:275)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:275)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:326)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren(TreeNode.scala:324)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:275)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:93)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:93)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$1.apply(QueryPlan.scala:105)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$1.apply(QueryPlan.scala:105)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:70)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpression$1(QueryPlan.scala:104)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:116)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:117)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$2.apply(QueryPlan.scala:126)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions(QueryPlan.scala:126)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp(QueryPlan.scala:93)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:107)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:85)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp(TreeNode.scala:127)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$class.checkAnalysis(CheckAnalysis.scala:85)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer.checkAnalysis(Analyzer.scala:95)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$executeAndCheck$1.apply(Analyzer.scala:108)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$executeAndCheck$1.apply(Analyzer.scala:105)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.markInAnalyzer(AnalysisHelper.scala:201)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer.executeAndCheck(Analyzer.scala:105)\n\tat org.apache.spark.sql.execution.QueryExecution.analyzed$lzycompute(QueryExecution.scala:57)\n\tat org.apache.spark.sql.execution.QueryExecution.analyzed(QueryExecution.scala:55)\n\tat org.apache.spark.sql.execution.QueryExecution.assertAnalyzed(QueryExecution.scala:47)\n\tat org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:78)\n\tat org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$withPlan(Dataset.scala:3410)\n\tat org.apache.spark.sql.Dataset.join(Dataset.scala:995)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable$.joinTableDataset(CreateFlatTable.scala:191)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable$$anonfun$joinFactTableWithLookupTables$1.apply(CreateFlatTable.scala:165)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable$$anonfun$joinFactTableWithLookupTables$1.apply(CreateFlatTable.scala:164)\n\tat scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157)\n\tat scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157)\n\tat scala.collection.immutable.HashMap$HashMap1.foreach(HashMap.scala:221)\n\tat scala.collection.immutable.HashMap$HashTrieMap.foreach(HashMap.scala:428)\n\tat scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157)\n\tat scala.collection.AbstractTraversable.foldLeft(Traversable.scala:104)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable$.joinFactTableWithLookupTables(CreateFlatTable.scala:163)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable.generateDataset(CreateFlatTable.scala:68)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser.getFlatTable(ParentSourceChooser.scala:163)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser.io$kyligence$kap$engine$spark$job$ParentSourceChooser$$decideFlatTableSource(ParentSourceChooser.scala:73)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser$$anonfun$decideSources$1.apply(ParentSourceChooser.scala:59)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser$$anonfun$decideSources$1.apply(ParentSourceChooser.scala:54)\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:893)\n\tat scala.collection.AbstractIterator.foreach(Iterator.scala:1336)\n\tat scala.collection.IterableLike$class.foreach(IterableLike.scala:72)\n\tat scala.collection.AbstractIterable.foreach(Iterable.scala:54)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser.decideSources(ParentSourceChooser.scala:54)\n\tat io.kyligence.kap.engine.spark.job.ResourceDetectBeforeCubingJob.doExecute(ResourceDetectBeforeCubingJob.java:60)\n\tat io.kyligence.kap.engine.spark.application.SparkApplication.execute(SparkApplication.java:266)\n\tat io.kyligence.kap.engine.spark.application.SparkApplication.execute(SparkApplication.java:86)\n\t... 14 more\n",
  "status" : "ERROR",
  "info" : {
    "startTime" : "1576666081977",
    "buildInstance" : "97536@yimingxumac.local",
    "endTime" : "1576666088581"
  }
}