{
  "uuid" : "26fb182c-fa6c-46d1-b0de-473a530bd9f4-00",
  "last_modified" : 1576665941299,
  "version" : "3.0.0.20500",
  "content" : "java.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat io.kyligence.kap.engine.spark.job.NSparkExecutable.runLocalMode(NSparkExecutable.java:359)\n\tat io.kyligence.kap.engine.spark.job.NSparkExecutable.doWork(NSparkExecutable.java:153)\n\tat org.apache.kylin.job.execution.AbstractExecutable.execute(AbstractExecutable.java:190)\n\tat org.apache.kylin.job.execution.DefaultChainedExecutable.doWork(DefaultChainedExecutable.java:76)\n\tat org.apache.kylin.job.execution.AbstractExecutable.execute(AbstractExecutable.java:190)\n\tat org.apache.kylin.job.impl.threadpool.DefaultScheduler$JobRunner.run(DefaultScheduler.java:114)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.RuntimeException: Error execute io.kyligence.kap.engine.spark.job.ResourceDetectBeforeCubingJob\n\tat io.kyligence.kap.engine.spark.application.SparkApplication.execute(SparkApplication.java:89)\n\tat io.kyligence.kap.engine.spark.job.ResourceDetectBeforeCubingJob.main(ResourceDetectBeforeCubingJob.java:99)\n\t... 13 more\nCaused by: org.apache.spark.sql.AnalysisException: cannot resolve '`SELLER_ACCOUNT_0_DOT_0_ACCOUNT_COUNTRY`' given input columns: [TEST_CATEGORY_GROUPINGS_0_DOT_0_VCS_ID, TEST_CAL_DT_0_DOT_0_AGE_FOR_DT_ID, TEST_KYLIN_FACT_0_DOT_0_SELLER_ID, TEST_CAL_DT_0_DOT_0_MONTH_END_DT, TEST_CAL_DT_0_DOT_0_YTW_YN_ID, TEST_CAL_DT_0_DOT_0_YEAR_ID, TEST_CAL_DT_0_DOT_0_WEEK_BEG_END_DESC_MDY, TEST_CAL_DT_0_DOT_0_QTR_IND, TEST_CAL_DT_0_DOT_0_CS_WEEK_BEG_DT, TEST_KYLIN_FACT_0_DOT_0_ORDER_ID, TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_DISTINCT_BITMAP, TEST_CAL_DT_0_DOT_0_WEEK_BEG_DT, TEST_CAL_DT_0_DOT_0_YEAR_IND, TEST_KYLIN_FACT_0_DOT_0_LSTG_SITE_ID, TEST_CAL_DT_0_DOT_0_QTR_BEG_DT, TEST_CATEGORY_GROUPINGS_0_DOT_0_ADULT_CATEG_YN, TEST_CAL_DT_0_DOT_0_AGE_FOR_CS_WEEK_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_BUSN_UNIT, TEST_CAL_DT_0_DOT_0_WEEK_END_DT, SELLER_COUNTRY_0_DOT_0_COUNTRY, TEST_CATEGORY_GROUPINGS_0_DOT_0_SRC_ID, TEST_CAL_DT_0_DOT_0_QTR_ID, TEST_CAL_DT_0_DOT_0_AGE_FOR_WEEK_ID, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_MONTH_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_DOMAIN_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL2_ID, TEST_CAL_DT_0_DOT_0_RTL_YEAR_BEG_DT, TEST_CAL_DT_0_DOT_0_CAL_DT_CRE_USER, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_2QTR_YN_ID, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_2MONTH_YN_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_LEAF_CATEG_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_BUSN_MGR, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL2_NAME, TEST_CAL_DT_0_DOT_0_CAL_DT_UPD_USER, TEST_CAL_DT_0_DOT_0_YTD_YN_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL3_NAME, TEST_KYLIN_FACT_0_DOT_0_LEAF_CATEG_ID, TEST_CAL_DT_0_DOT_0_CAL_DATE, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_2YEAR_DT, TEST_CAL_DT_0_DOT_0_PRD_ID, TEST_CAL_DT_0_DOT_0_RTL_QTR_BEG_DT, TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_COLUMN, TEST_CAL_DT_0_DOT_0_QTR_OF_YEAR_ID, TEST_CAL_DT_0_DOT_0_YEAR_END_DT, TEST_CAL_DT_0_DOT_0_MONTH_OF_CAL_ID, TEST_CAL_DT_0_DOT_0_DAY_OF_CAL_ID, TEST_KYLIN_FACT_0_DOT_0_SLR_SEGMENT_CD, TEST_CAL_DT_0_DOT_0_RETAIL_WK_END_DATE, TEST_CAL_DT_0_DOT_0_DAY_IN_YEAR_COUNT, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL6_ID, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_1YEAR_DT, TEST_CAL_DT_0_DOT_0_WEEK_OF_YEAR_ID, TEST_KYLIN_FACT_0_DOT_0_PRICE, TEST_CATEGORY_GROUPINGS_0_DOT_0_META_CATEG_ID, TEST_CAL_DT_0_DOT_0_YTQ_YN_ID, TEST_CAL_DT_0_DOT_0_PRD_DESC, TEST_CAL_DT_0_DOT_0_MONTH_ID, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_2WEEK_DT, TEST_CATEGORY_GROUPINGS_0_DOT_0_LEAF_CATEG_NAME, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_WEEK_ID, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_1MONTH_DT, TEST_CAL_DT_0_DOT_0_RETAIL_YEAR, TEST_CAL_DT_0_DOT_0_DAY_IN_WEEK_COUNT, TEST_CAL_DT_0_DOT_0_DAY_OF_MONTH_ID, TEST_CAL_DT_0_DOT_0_CAL_DT_NAME, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_2QTR_DT, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL5_NAME, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL3_ID, TEST_KYLIN_FACT_0_DOT_0_CAL_DT, TEST_CATEGORY_GROUPINGS_0_DOT_0_UPD_DATE, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL4_NAME, TEST_CAL_DT_0_DOT_0_CAL_DT_CRE_DATE, TEST_CAL_DT_0_DOT_0_YEAR_OF_CAL_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_GROUPINGS_CRE_USER, TEST_CATEGORY_GROUPINGS_0_DOT_0_GCS_ID, TEST_CAL_DT_0_DOT_0_RETAIL_WEEK, TEST_CAL_DT_0_DOT_0_WEEK_OF_CAL_ID, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_1MONTH_YN_ID, TEST_CAL_DT_0_DOT_0_QTR_OF_CAL_ID, TEST_CAL_DT_0_DOT_0_PRD_IND, TEST_CAL_DT_0_DOT_0_SEASON_BEG_DT, TEST_CAL_DT_0_DOT_0_CAL_DT_SHORT_NAME, TEST_CAL_DT_0_DOT_0_MTD_YN_ID, TEST_CAL_DT_0_DOT_0_RTL_MONTH_OF_RTL_YEAR_ID, TEST_CAL_DT_0_DOT_0_DAY_IN_MONTH_COUNT, TEST_CATEGORY_GROUPINGS_0_DOT_0_MOVE_TO, TEST_CAL_DT_0_DOT_0_WEEK_IND, TEST_CATEGORY_GROUPINGS_0_DOT_0_USER_DEFINED_FIELD3, TEST_CAL_DT_0_DOT_0_RTL_MONTH_BEG_DT, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_2WEEK_YN_IND, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL4_ID, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_1QTR_YN_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_FLAGS, TEST_CATEGORY_GROUPINGS_0_DOT_0_REGN_CATEG, TEST_CAL_DT_0_DOT_0_AGE_FOR_QTR_ID, TEST_CAL_DT_0_DOT_0_QTR_END_DT, TEST_CAL_DT_0_DOT_0_DAY_OF_WEEK_ID, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_1QTR_DT, TEST_KYLIN_FACT_0_DOT_0_LSTG_FORMAT_NAME, TEST_CAL_DT_0_DOT_0_PRD_FLAG, TEST_KYLIN_FACT_0_DOT_0_ITEM_COUNT, TEST_CAL_DT_0_DOT_0_DAY_OF_WEEK, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_YEAR_ID, TEST_CAL_DT_0_DOT_0_AGE_FOR_YEAR_ID, TEST_CAL_DT_0_DOT_0_WEEK_BEG_DATE, TEST_CAL_DT_0_DOT_0_QTD_YN_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_BSNS_VRTCL_NAME, TEST_CATEGORY_GROUPINGS_0_DOT_0_UPD_USER, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL7_NAME, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_2MONTH_DT, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL5_ID, TEST_CAL_DT_0_DOT_0_WEEK_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL6_NAME, TEST_CAL_DT_0_DOT_0_RETAIL_START_DATE, TEST_CATEGORY_GROUPINGS_0_DOT_0_SAP_CATEGORY_ID, SELLER_COUNTRY_0_DOT_0_LATITUDE, TEST_CAL_DT_0_DOT_0_DAY_IN_QTR_COUNT, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_1YEAR_YN_ID, TEST_CAL_DT_0_DOT_0_CAL_DT_MNS_1WEEK_DT, TEST_CAL_DT_0_DOT_0_DAY_OF_YEAR_ID, TEST_CAL_DT_0_DOT_0_CAL_DT_UPD_DATE, SELLER_COUNTRY_0_DOT_0_LONGITUDE, TEST_CAL_DT_0_DOT_0_RTL_WEEK_OF_RTL_YEAR_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_SITE_ID, TEST_CAL_DT_0_DOT_0_WEEK_BEG_END_DESC_MD, TEST_CAL_DT_0_DOT_0_MONTH_OF_QTR_ID, TEST_CAL_DT_0_DOT_0_WTD_YN_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL7_ID, TEST_KYLIN_FACT_0_DOT_0_TRANS_ID, TEST_CAL_DT_0_DOT_0_RTL_QTR_OF_RTL_YEAR_ID, TEST_CAL_DT_0_DOT_0_SEASON_OF_YEAR_ID, TEST_CAL_DT_0_DOT_0_YEAR_BEG_DT, TEST_CAL_DT_0_DOT_0_WEEK_NUM_DESC, TEST_CATEGORY_GROUPINGS_0_DOT_0_GROUPINGS_CRE_DATE, TEST_CAL_DT_0_DOT_0_DAY_OF_QTR_ID, SELLER_COUNTRY_0_DOT_0_NAME, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_2YEAR_YN_ID, TEST_CAL_DT_0_DOT_0_YTM_YN_ID, TEST_CAL_DT_0_DOT_0_QTR_DESC, TEST_CAL_DT_0_DOT_0_RTL_WEEK_BEG_DT, TEST_CAL_DT_0_DOT_0_CURR_CAL_DT_MNS_1WEEK_YN_IND, TEST_CAL_DT_0_DOT_0_AGE_FOR_MONTH_ID, TEST_CAL_DT_0_DOT_0_MONTH_OF_YEAR_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_META_CATEG_NAME, TEST_CAL_DT_0_DOT_0_CAL_DT, TEST_CAL_DT_0_DOT_0_WEEK_IN_YEAR_ID, TEST_CAL_DT_0_DOT_0_CAL_DT_DESC, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_QTR_ID, TEST_CATEGORY_GROUPINGS_0_DOT_0_USER_DEFINED_FIELD1, TEST_CAL_DT_0_DOT_0_MONTH_BEG_DT, TEST_CATEGORY_GROUPINGS_0_DOT_0_USER_DEFINED_FIELD5, TEST_CAL_DT_0_DOT_0_WEEK_END_DATE];;\n'Join Inner, ('SELLER_ACCOUNT_0_DOT_0_ACCOUNT_COUNTRY = SELLER_COUNTRY_0_DOT_0_COUNTRY#918)\n:- Join Inner, ((TEST_KYLIN_FACT_0_DOT_0_LEAF_CATEG_ID#28L = TEST_CATEGORY_GROUPINGS_0_DOT_0_LEAF_CATEG_ID#657L) && (TEST_KYLIN_FACT_0_DOT_0_LSTG_SITE_ID#29 = TEST_CATEGORY_GROUPINGS_0_DOT_0_SITE_ID#659))\n:  :- Join Inner, (TEST_KYLIN_FACT_0_DOT_0_CAL_DT#26 = TEST_CAL_DT_0_DOT_0_CAL_DT#285)\n:  :  :- Project [TEST_KYLIN_FACT_0_DOT_0_TRANS_ID#24L, TEST_KYLIN_FACT_0_DOT_0_ORDER_ID#25L, TEST_KYLIN_FACT_0_DOT_0_CAL_DT#26, TEST_KYLIN_FACT_0_DOT_0_LSTG_FORMAT_NAME#27, TEST_KYLIN_FACT_0_DOT_0_LEAF_CATEG_ID#28L, TEST_KYLIN_FACT_0_DOT_0_LSTG_SITE_ID#29, TEST_KYLIN_FACT_0_DOT_0_SLR_SEGMENT_CD#30, TEST_KYLIN_FACT_0_DOT_0_SELLER_ID#31, TEST_KYLIN_FACT_0_DOT_0_PRICE#32, TEST_KYLIN_FACT_0_DOT_0_ITEM_COUNT#33, TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_DISTINCT_BITMAP#34, TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_COLUMN#35]\n:  :  :  +- Project [TRANS_ID#0L AS TEST_KYLIN_FACT_0_DOT_0_TRANS_ID#24L, ORDER_ID#1L AS TEST_KYLIN_FACT_0_DOT_0_ORDER_ID#25L, CAL_DT#2 AS TEST_KYLIN_FACT_0_DOT_0_CAL_DT#26, LSTG_FORMAT_NAME#3 AS TEST_KYLIN_FACT_0_DOT_0_LSTG_FORMAT_NAME#27, LEAF_CATEG_ID#4L AS TEST_KYLIN_FACT_0_DOT_0_LEAF_CATEG_ID#28L, LSTG_SITE_ID#5 AS TEST_KYLIN_FACT_0_DOT_0_LSTG_SITE_ID#29, SLR_SEGMENT_CD#6 AS TEST_KYLIN_FACT_0_DOT_0_SLR_SEGMENT_CD#30, SELLER_ID#7 AS TEST_KYLIN_FACT_0_DOT_0_SELLER_ID#31, PRICE#8 AS TEST_KYLIN_FACT_0_DOT_0_PRICE#32, ITEM_COUNT#9 AS TEST_KYLIN_FACT_0_DOT_0_ITEM_COUNT#33, TEST_COUNT_DISTINCT_BITMAP#10 AS TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_DISTINCT_BITMAP#34, TEST_COUNT_COLUMN#11 AS TEST_KYLIN_FACT_0_DOT_0_TEST_COUNT_COLUMN#35]\n:  :  :     +- SubqueryAlias `TEST_KYLIN_FACT`\n:  :  :        +- Relation[TRANS_ID#0L,ORDER_ID#1L,CAL_DT#2,LSTG_FORMAT_NAME#3,LEAF_CATEG_ID#4L,LSTG_SITE_ID#5,SLR_SEGMENT_CD#6,SELLER_ID#7,PRICE#8,ITEM_COUNT#9,TEST_COUNT_DISTINCT_BITMAP#10,TEST_COUNT_COLUMN#11] csv\n:  :  +- Project [TEST_CAL_DT_0_DOT_0_CAL_DT#285, TEST_CAL_DT_0_DOT_0_YEAR_BEG_DT#286, TEST_CAL_DT_0_DOT_0_QTR_BEG_DT#287, TEST_CAL_DT_0_DOT_0_MONTH_BEG_DT#288, TEST_CAL_DT_0_DOT_0_WEEK_BEG_DT#289, TEST_CAL_DT_0_DOT_0_AGE_FOR_YEAR_ID#290, TEST_CAL_DT_0_DOT_0_AGE_FOR_QTR_ID#291, TEST_CAL_DT_0_DOT_0_AGE_FOR_MONTH_ID#292, TEST_CAL_DT_0_DOT_0_AGE_FOR_WEEK_ID#293, TEST_CAL_DT_0_DOT_0_AGE_FOR_DT_ID#294, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_YEAR_ID#295, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_QTR_ID#296, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_MONTH_ID#297, TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_WEEK_ID#298, TEST_CAL_DT_0_DOT_0_AGE_FOR_CS_WEEK_ID#299, TEST_CAL_DT_0_DOT_0_DAY_OF_CAL_ID#300, TEST_CAL_DT_0_DOT_0_DAY_OF_YEAR_ID#301, TEST_CAL_DT_0_DOT_0_DAY_OF_QTR_ID#302, TEST_CAL_DT_0_DOT_0_DAY_OF_MONTH_ID#303, TEST_CAL_DT_0_DOT_0_DAY_OF_WEEK_ID#304, TEST_CAL_DT_0_DOT_0_WEEK_OF_YEAR_ID#305, TEST_CAL_DT_0_DOT_0_WEEK_OF_CAL_ID#306, TEST_CAL_DT_0_DOT_0_MONTH_OF_QTR_ID#307, TEST_CAL_DT_0_DOT_0_MONTH_OF_YEAR_ID#308, ... 76 more fields]\n:  :     +- Project [CAL_DT#85 AS TEST_CAL_DT_0_DOT_0_CAL_DT#285, YEAR_BEG_DT#86 AS TEST_CAL_DT_0_DOT_0_YEAR_BEG_DT#286, QTR_BEG_DT#87 AS TEST_CAL_DT_0_DOT_0_QTR_BEG_DT#287, MONTH_BEG_DT#88 AS TEST_CAL_DT_0_DOT_0_MONTH_BEG_DT#288, WEEK_BEG_DT#89 AS TEST_CAL_DT_0_DOT_0_WEEK_BEG_DT#289, AGE_FOR_YEAR_ID#90 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_YEAR_ID#290, AGE_FOR_QTR_ID#91 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_QTR_ID#291, AGE_FOR_MONTH_ID#92 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_MONTH_ID#292, AGE_FOR_WEEK_ID#93 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_WEEK_ID#293, AGE_FOR_DT_ID#94 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_DT_ID#294, AGE_FOR_RTL_YEAR_ID#95 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_YEAR_ID#295, AGE_FOR_RTL_QTR_ID#96 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_QTR_ID#296, AGE_FOR_RTL_MONTH_ID#97 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_MONTH_ID#297, AGE_FOR_RTL_WEEK_ID#98 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_RTL_WEEK_ID#298, AGE_FOR_CS_WEEK_ID#99 AS TEST_CAL_DT_0_DOT_0_AGE_FOR_CS_WEEK_ID#299, DAY_OF_CAL_ID#100 AS TEST_CAL_DT_0_DOT_0_DAY_OF_CAL_ID#300, DAY_OF_YEAR_ID#101 AS TEST_CAL_DT_0_DOT_0_DAY_OF_YEAR_ID#301, DAY_OF_QTR_ID#102 AS TEST_CAL_DT_0_DOT_0_DAY_OF_QTR_ID#302, DAY_OF_MONTH_ID#103 AS TEST_CAL_DT_0_DOT_0_DAY_OF_MONTH_ID#303, DAY_OF_WEEK_ID#104 AS TEST_CAL_DT_0_DOT_0_DAY_OF_WEEK_ID#304, WEEK_OF_YEAR_ID#105 AS TEST_CAL_DT_0_DOT_0_WEEK_OF_YEAR_ID#305, WEEK_OF_CAL_ID#106 AS TEST_CAL_DT_0_DOT_0_WEEK_OF_CAL_ID#306, MONTH_OF_QTR_ID#107 AS TEST_CAL_DT_0_DOT_0_MONTH_OF_QTR_ID#307, MONTH_OF_YEAR_ID#108 AS TEST_CAL_DT_0_DOT_0_MONTH_OF_YEAR_ID#308, ... 76 more fields]\n:  :        +- SubqueryAlias `TEST_CAL_DT`\n:  :           +- Relation[CAL_DT#85,YEAR_BEG_DT#86,QTR_BEG_DT#87,MONTH_BEG_DT#88,WEEK_BEG_DT#89,AGE_FOR_YEAR_ID#90,AGE_FOR_QTR_ID#91,AGE_FOR_MONTH_ID#92,AGE_FOR_WEEK_ID#93,AGE_FOR_DT_ID#94,AGE_FOR_RTL_YEAR_ID#95,AGE_FOR_RTL_QTR_ID#96,AGE_FOR_RTL_MONTH_ID#97,AGE_FOR_RTL_WEEK_ID#98,AGE_FOR_CS_WEEK_ID#99,DAY_OF_CAL_ID#100,DAY_OF_YEAR_ID#101,DAY_OF_QTR_ID#102,DAY_OF_MONTH_ID#103,DAY_OF_WEEK_ID#104,WEEK_OF_YEAR_ID#105,WEEK_OF_CAL_ID#106,MONTH_OF_QTR_ID#107,MONTH_OF_YEAR_ID#108,... 76 more fields] csv\n:  +- Project [TEST_CATEGORY_GROUPINGS_0_DOT_0_LEAF_CATEG_ID#657L, TEST_CATEGORY_GROUPINGS_0_DOT_0_LEAF_CATEG_NAME#658, TEST_CATEGORY_GROUPINGS_0_DOT_0_SITE_ID#659, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_BUSN_MGR#660, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_BUSN_UNIT#661, TEST_CATEGORY_GROUPINGS_0_DOT_0_REGN_CATEG#662, TEST_CATEGORY_GROUPINGS_0_DOT_0_USER_DEFINED_FIELD1#663, TEST_CATEGORY_GROUPINGS_0_DOT_0_USER_DEFINED_FIELD3#664, TEST_CATEGORY_GROUPINGS_0_DOT_0_GROUPINGS_CRE_DATE#665, TEST_CATEGORY_GROUPINGS_0_DOT_0_UPD_DATE#666, TEST_CATEGORY_GROUPINGS_0_DOT_0_GROUPINGS_CRE_USER#667, TEST_CATEGORY_GROUPINGS_0_DOT_0_UPD_USER#668, TEST_CATEGORY_GROUPINGS_0_DOT_0_META_CATEG_ID#669, TEST_CATEGORY_GROUPINGS_0_DOT_0_META_CATEG_NAME#670, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL2_ID#671, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL3_ID#672, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL4_ID#673, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL5_ID#674, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL6_ID#675, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL7_ID#676, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL2_NAME#677, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL3_NAME#678, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL4_NAME#679, TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL5_NAME#680, ... 12 more fields]\n:     +- Project [LEAF_CATEG_ID#585L AS TEST_CATEGORY_GROUPINGS_0_DOT_0_LEAF_CATEG_ID#657L, LEAF_CATEG_NAME#586 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_LEAF_CATEG_NAME#658, SITE_ID#587 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_SITE_ID#659, CATEG_BUSN_MGR#588 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_BUSN_MGR#660, CATEG_BUSN_UNIT#589 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_BUSN_UNIT#661, REGN_CATEG#590 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_REGN_CATEG#662, USER_DEFINED_FIELD1#591 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_USER_DEFINED_FIELD1#663, USER_DEFINED_FIELD3#592 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_USER_DEFINED_FIELD3#664, GROUPINGS_CRE_DATE#593 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_GROUPINGS_CRE_DATE#665, UPD_DATE#594 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_UPD_DATE#666, GROUPINGS_CRE_USER#595 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_GROUPINGS_CRE_USER#667, UPD_USER#596 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_UPD_USER#668, META_CATEG_ID#597 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_META_CATEG_ID#669, META_CATEG_NAME#598 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_META_CATEG_NAME#670, CATEG_LVL2_ID#599 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL2_ID#671, CATEG_LVL3_ID#600 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL3_ID#672, CATEG_LVL4_ID#601 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL4_ID#673, CATEG_LVL5_ID#602 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL5_ID#674, CATEG_LVL6_ID#603 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL6_ID#675, CATEG_LVL7_ID#604 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL7_ID#676, CATEG_LVL2_NAME#605 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL2_NAME#677, CATEG_LVL3_NAME#606 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL3_NAME#678, CATEG_LVL4_NAME#607 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL4_NAME#679, CATEG_LVL5_NAME#608 AS TEST_CATEGORY_GROUPINGS_0_DOT_0_CATEG_LVL5_NAME#680, ... 12 more fields]\n:        +- SubqueryAlias `TEST_CATEGORY_GROUPINGS`\n:           +- Relation[LEAF_CATEG_ID#585L,LEAF_CATEG_NAME#586,SITE_ID#587,CATEG_BUSN_MGR#588,CATEG_BUSN_UNIT#589,REGN_CATEG#590,USER_DEFINED_FIELD1#591,USER_DEFINED_FIELD3#592,GROUPINGS_CRE_DATE#593,UPD_DATE#594,GROUPINGS_CRE_USER#595,UPD_USER#596,META_CATEG_ID#597,META_CATEG_NAME#598,CATEG_LVL2_ID#599,CATEG_LVL3_ID#600,CATEG_LVL4_ID#601,CATEG_LVL5_ID#602,CATEG_LVL6_ID#603,CATEG_LVL7_ID#604,CATEG_LVL2_NAME#605,CATEG_LVL3_NAME#606,CATEG_LVL4_NAME#607,CATEG_LVL5_NAME#608,... 12 more fields] csv\n+- Project [SELLER_COUNTRY_0_DOT_0_COUNTRY#918, SELLER_COUNTRY_0_DOT_0_LATITUDE#919, SELLER_COUNTRY_0_DOT_0_LONGITUDE#920, SELLER_COUNTRY_0_DOT_0_NAME#921]\n   +- Project [COUNTRY#910 AS SELLER_COUNTRY_0_DOT_0_COUNTRY#918, LATITUDE#911 AS SELLER_COUNTRY_0_DOT_0_LATITUDE#919, LONGITUDE#912 AS SELLER_COUNTRY_0_DOT_0_LONGITUDE#920, NAME#913 AS SELLER_COUNTRY_0_DOT_0_NAME#921]\n      +- SubqueryAlias `SELLER_COUNTRY`\n         +- Relation[COUNTRY#910,LATITUDE#911,LONGITUDE#912,NAME#913] csv\n\n\tat org.apache.spark.sql.catalyst.analysis.package$AnalysisErrorAt.failAnalysis(package.scala:42)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$3.applyOrElse(CheckAnalysis.scala:110)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$3.applyOrElse(CheckAnalysis.scala:107)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:278)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:278)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:70)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:277)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:275)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:275)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:326)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren(TreeNode.scala:324)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:275)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:93)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:93)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$1.apply(QueryPlan.scala:105)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$1.apply(QueryPlan.scala:105)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:70)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpression$1(QueryPlan.scala:104)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:116)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:117)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$2.apply(QueryPlan.scala:126)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions(QueryPlan.scala:126)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp(QueryPlan.scala:93)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:107)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:85)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp(TreeNode.scala:127)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$class.checkAnalysis(CheckAnalysis.scala:85)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer.checkAnalysis(Analyzer.scala:95)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$executeAndCheck$1.apply(Analyzer.scala:108)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$executeAndCheck$1.apply(Analyzer.scala:105)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.markInAnalyzer(AnalysisHelper.scala:201)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer.executeAndCheck(Analyzer.scala:105)\n\tat org.apache.spark.sql.execution.QueryExecution.analyzed$lzycompute(QueryExecution.scala:57)\n\tat org.apache.spark.sql.execution.QueryExecution.analyzed(QueryExecution.scala:55)\n\tat org.apache.spark.sql.execution.QueryExecution.assertAnalyzed(QueryExecution.scala:47)\n\tat org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:78)\n\tat org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$withPlan(Dataset.scala:3410)\n\tat org.apache.spark.sql.Dataset.join(Dataset.scala:995)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable$.joinTableDataset(CreateFlatTable.scala:191)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable$$anonfun$joinFactTableWithLookupTables$1.apply(CreateFlatTable.scala:165)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable$$anonfun$joinFactTableWithLookupTables$1.apply(CreateFlatTable.scala:164)\n\tat scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157)\n\tat scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157)\n\tat scala.collection.immutable.HashMap$HashMap1.foreach(HashMap.scala:221)\n\tat scala.collection.immutable.HashMap$HashTrieMap.foreach(HashMap.scala:428)\n\tat scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157)\n\tat scala.collection.AbstractTraversable.foldLeft(Traversable.scala:104)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable$.joinFactTableWithLookupTables(CreateFlatTable.scala:163)\n\tat io.kyligence.kap.engine.spark.builder.CreateFlatTable.generateDataset(CreateFlatTable.scala:68)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser.getFlatTable(ParentSourceChooser.scala:163)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser.io$kyligence$kap$engine$spark$job$ParentSourceChooser$$decideFlatTableSource(ParentSourceChooser.scala:73)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser$$anonfun$decideSources$1.apply(ParentSourceChooser.scala:59)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser$$anonfun$decideSources$1.apply(ParentSourceChooser.scala:54)\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:893)\n\tat scala.collection.AbstractIterator.foreach(Iterator.scala:1336)\n\tat scala.collection.IterableLike$class.foreach(IterableLike.scala:72)\n\tat scala.collection.AbstractIterable.foreach(Iterable.scala:54)\n\tat io.kyligence.kap.engine.spark.job.ParentSourceChooser.decideSources(ParentSourceChooser.scala:54)\n\tat io.kyligence.kap.engine.spark.job.ResourceDetectBeforeCubingJob.doExecute(ResourceDetectBeforeCubingJob.java:60)\n\tat io.kyligence.kap.engine.spark.application.SparkApplication.execute(SparkApplication.java:266)\n\tat io.kyligence.kap.engine.spark.application.SparkApplication.execute(SparkApplication.java:86)\n\t... 14 more\n",
  "status" : "ERROR",
  "info" : {
    "startTime" : "1576665540918",
    "endTime" : "1576665941292"
  }
}